Перем Таблица;//Таблица:Grid
Перем НомерРедактируемойСтроки;
Перем НомерНовойСтроки;
Перем НачатоРедактирование;
//******************************************************************************************
//Предопределенные процедуры и функции объекта
//******************************************************************************************

//___________________________________________________________________________________________
//Динамическое получение атрибутов
Функция ПолучитьАтрибут(Имя)Экспорт
	ТекСтрока=Таблица.СтрокаОтображения();
	Если ВРЕГ(Имя)="НОМЕРСТРОКИ" Тогда
		Если ТекСтрока>0 Тогда
			Возврат ТекСтрока;		    
		Иначе
			Возврат Таблица.ТекущийНомерСтроки();
		КонецЕсли
	КонецЕсли
	
	Если ТекСтрока>0 Тогда//режим автовычисления формул при отрисовке таблицы...
		Таблица.ПолучитьСтрокуПоНомеру(ТекСтрока);
	КонецЕсли
	
	Попытка
		Возврат Таблица.ПолучитьАтрибут(Имя);
	Исключение
		Ошибка(ОписаниеОшибки());
	КонецПопытки
КонецФункции

//___________________________________________________________________________________________
//Динамическое задание атрибутов
Процедура УстановитьАтрибут(Имя,Значение)Экспорт
	Попытка
		Таблица.УстановитьАтрибут(Имя,Значение);
	Исключение
		Ошибка(ОписаниеОшибки());
	КонецПопытки
КонецПроцедуры

//___________________________________________________________________________________________
Функция ПолучитьИмяАтрибута(Номер)Экспорт
	Попытка
		Возврат Таблица.ИдентификаторКолонки(Номер-1);//т.к. объект нумерует с 0-ля
	Исключение
		Возврат "";
	КонецПопытки
КонецФункции
//___________________________________________________________________________________________
Функция ПолучитьНомерАтрибута(Имя)Экспорт
	Попытка
		Возврат Таблица.ИдентификаторКолонки(Имя)+1;//т.к. объект нумерует с 0-ля
	Исключение
		Возврат 0;
	КонецПопытки
КонецФункции
//___________________________________________________________________________________________
Функция ПолучитьКоличествоАтрибутов()Экспорт
	Возврат Таблица.КоличествоКолонок();
КонецФункции
//___________________________________________________________________________________________
//Строковое значение типа объекта
Функция ПолучитьТипОбъекта()
	Возврат "ТабличняЧасть";
КонецФункции

//___________________________________________________________________________________________
//Конструктор (вызывается при инициализации объекта)
//ВидОбъекта - вид объекта, задающийся строкой следуемой за символом "."
//Параметр - произвольный параметр (для визуальных элементов - объект базового класса)
Функция Конструктор(ВидОбъекта,Диалог)Экспорт
	НомерНовойСтроки=0;
	НомерРедактируемойСтроки=0;
	
	Если ТипЗначения(Диалог)=0 Тогда
		//Ошибка("Объект доступен только в визуальном режиме");
	Иначе
		Таблица=Диалог;
	КонецЕсли;
КонецФункции

//___________________________________________________________________________________________
//Обрабочик событий визуального объекта
//Возвращает:
//0 - событие не обработано (передается в форму для дальнейшей обработки)
//1 - событие обработано (далее в форму не передается)
//ИмяСобытия - имя события как оно задано в окне свойств конфигуратора
Функция ОбработкаСобытия(ИмяСобытия,НомСтр,НомКол,СтрТекст,НомКартинки,НомФормат,НомЦветТекста,НомЦветФона) Экспорт
	//Если ИмяСобытия="Начало редактирования" Тогда

	Если НомерНовойСтроки<>0 Тогда
		Если НомерНовойСтроки-1<>Таблица.ТекущаяСтрока() Тогда
			НомерРедактируемойСтроки=0;
			НомерНовойСтроки=0;
		КонецЕсли
	КонецЕсли


	
	Если ИмяСобытия="Левая кнопка" Тогда
	//Если ИмяСобытия="Двойн.лев.кнопка" Тогда
		Если Таблица.КоличествоСтрок()=Таблица.КоличествоФиксСтрок() Тогда
			 РедакторНоваяСтрока();
		КонецЕсли
	ИначеЕсли ИмяСобытия="Начало выделения" Тогда
		Возврат 0;
	ИначеЕсли ИмяСобытия="Нажатие клавиши" Тогда
		Если СостояниеКлавиши("CONTROL") Тогда
			Возврат 0;
		КонецЕсли
		
		НомерРедактируемойСтроки=0;
		Если НажатаяКлавиша()=27 Тогда//ESCAPE
			Возврат РедакторОтменитьВводНовойСтроки();
		ИначеЕсли НажатаяКлавиша()=45 Тогда//INSERT
			РедакторНоваяСтрока();
			Возврат 1;
		ИначеЕсли НажатаяКлавиша()=46 Тогда//DEL
			РедакторУдалитьСтроку();
			Возврат 1;
		ИначеЕсли НажатаяКлавиша()=113 Тогда//F2
			РедакторНачалоРедактирования();
			Возврат 0;
		ИначеЕсли НажатаяКлавиша()=115 Тогда//F4
			РедакторНачалоРедактирования();
			Возврат 0;
		ИначеЕсли НажатаяКлавиша()=116 Тогда//F5
			РедакторОбновить();
		ИначеЕсли НажатаяКлавиша()=120 Тогда//F9
			РедакторКопироватьСтроку();
		ИначеЕсли НажатаяКлавиша()=13 Тогда//ENTER
			РедакторНачалоРедактирования();
			Возврат 0;
		КонецЕсли
	ИначеЕсли ИмяСобытия="Начало редактирования" Тогда
		Если НачатоРедактирование<>1 Тогда
			НачатоРедактирование=1;
			РедакторНачалоРедактирования();
		КонецЕсли
		НачатоРедактирование=0;
	ИначеЕсли ИмяСобытия="Окончание редактирования" Тогда
		Если СостояниеКлавиши("ESCAPE") Тогда
			РедакторОтменитьВводНовойСтроки();
			Возврат 0;
		ИначеЕсли НомерНовойСтроки Тогда
			Если СостояниеКлавиши("TAB") Тогда
				Возврат 0;
			ИначеЕсли НЕ СостояниеКлавиши("RETURN") Тогда
				НомерНовойСтроки=0;
				Возврат 0;
			ИначеЕсли КоличествоКолонок()-1=Таблица.ТекущаяКолонка() Тогда
				НомерНовойСтроки=0;
				Возврат 0;
			КонецЕсли
			
			Таблица.ТекущаяКолонка(Таблица.ТекущаяКолонка()+1);//смещение вправо
			РедакторНачалоРедактирования();
		КонецЕсли
	КонецЕсли
	//Сообщить(ИмяСобытия);
	Возврат 0;//0 - передаем управление пользовательскому обработчику
КонецФункции

//******************************************************************************************
//Методы объекта доступные через точку (процедуры и функции с признаком Экспорт)
//******************************************************************************************
///////////////////////////////////////////////////////////////////////
//******************************************************************************************
//___________________________________________________________________________________________
//Устанавливает/возвращает количество колонок
Функция КоличествоКолонок(НовЧислоКол="") Экспорт
    ЧислоКол=Таблица.КоличествоКолонок();
	Если ТипЗначения(НовЧислоКол)=1 Тогда
		Таблица.КоличествоКолонок(НовЧислоКол);
	КонецЕсли
	Возврат ЧислоКол;
КонецФункции
//___________________________________________________________________________________________
//Добавить в конец таблицы значений новую колонку. Возвращает номер новой колонки
Функция НоваяКолонка(Идентификатор,Тип="",Длина="",Точность="",Заголовок="",Знач Ширина="") Экспорт
	ВставитьКолонку(Идентификатор,КоличествоКолонок()+1,Тип,Длина,Точность,Заголовок,Ширина);
КонецФункции

//___________________________________________________________________________________________
Функция ВставитьКолонку(Идентификатор,НомерКолонки,Тип,Длина,Точность,Заголовок,Ширина)Экспорт
	Если Число(Ширина)=0 Тогда
		 Ширина=15;
	КонецЕсли
	
	Если ТипЗначения(Заголовок)=0 Тогда
		 Заголовок=Идентификатор;
	КонецЕсли
	
	КК=Таблица.КоличествоКолонок();
	Таблица.КоличествоКолонок(КК+1);
	Таблица.ИдентификаторКолонки(КК,Идентификатор);
	Таблица.ЗаголовокКолонки(КК,Заголовок);
	Таблица.ТипКолонки(КК,Тип);
    Таблица.ШиринаКолонки(КК,5*Ширина); 
    Возврат КК+1;
КонецФункции//ВставитьКолонку

//___________________________________________________________________________________________
//УдалитьКолонку
Процедура УдалитьКолонку(Колонка) Экспорт
	Если ТипЗначения(Колонка)=1 Тогда//Число
		НомКол=Колонка;
	ИначеЕсли ТипЗначения(Колонка)=2 Тогда//Строка
	    НомКол=ПолучитьНомерАтрибута(Колонка); 	 
	КонецЕсли;
	Если НомКол=0 Тогда
	    Возврат;
	КонецЕсли
	
	Таблица.УдалитьКолонку(НомКол-1);//т.к. нумерация в объекте начинается с 0
КонецПроцедуры
//___________________________________________________________________________________________
//Получить параметры колонки
Функция ПолучитьПараметрыКолонки(Колонка,Тип) Экспорт
	Если ТипЗначения(Колонка)=1 Тогда//Число
		НомКол=Колонка;
	ИначеЕсли ТипЗначения(Колонка)=2 Тогда//Строка
	    НомКол=ПолучитьНомерАтрибута(Колонка); 	 
	КонецЕсли;
	Тип=Таблица.ТипКолонки(НомКол-1);//т.к. нумерация в объекте начинается с 0
	Возврат 1;
КонецФункции

//___________________________________________________________________________________________
//Устанавливает/возвращает количество строк в таблице значений
Функция КоличествоСтрок(НовЧислоСтрок="") Экспорт
    ЧислоСтрок=Таблица.КоличествоСтрок()-1;//т.к. строки начинаяются с нуля
	Если ТипЗначения(НовЧислоСтрок)=1 Тогда
		Таблица.КоличествоСтрок(НовЧислоСтрок+1);
	КонецЕсли
	Возврат ЧислоСтрок;
КонецФункции
//___________________________________________________________________________________________
//Новая строка
Процедура НоваяСтрока() Экспорт
	КС=Таблица.КоличествоСтрок();
    Таблица.КоличествоСтрок(КС+1);
    Таблица.ПолучитьСтрокуПоНомеру(КС);
КонецПроцедуры
//******************************************************************************************
Процедура УдалитьСтроку(НомСтроки) Экспорт
	Таблица.УдалитьСтроку(НомСтроки);
КонецПроцедуры
//___________________________________________________________________________________________
//Удаляет все строки, сохраняя структуру колонок
Процедура УдалитьСтроки() Экспорт
	Таблица.КоличествоСтрок(1);
КонецПроцедуры
//___________________________________________________________________________________________
//Открывает выборку строк таблицы значений. Дальнейшая выборка осуществляется при помощи метода ПолучитьСтроку
Процедура ВыбратьСтроки() Экспорт
	Таблица.ВыбратьСтроки();
КонецПроцедуры
//___________________________________________________________________________________________
//Получить из выборки следующую строку таблицы значений в последовательности выборки, открытой перед этим при помощи метода ВыбратьСтроки.
//Возвращает: 1 - если очередная строка выбрана, 0 - если не выбрана.
Функция ПолучитьСтроку() Экспорт
	Возврат Таблица.ПолучитьСтроку();
КонецФункции


//___________________________________________________________________________________________
Функция ПолучитьСтрокуПоНомеру(НомСтроки) Экспорт
	Возврат Таблица.ПолучитьСтрокуПоНомеру(НомСтроки);
КонецФункции

//___________________________________________________________________________________________
// 
Функция НайтиЗначение(Значение,НомСтроки,Колонка) Экспорт
	Возврат Таблица.НайтиЗначение(Значение,НомСтроки,Колонка);
КонецФункции
//___________________________________________________________________________________________
//
Процедура Сортировать(Колонки) Экспорт
	//Колонки - д.б. только одна колонка
	Если ТипЗначенияСтр(Колонки)="Число" Тогда
	    НомКол=Колонки-1;
	Иначе
	    НомКол=Таблица.ИдентификаторКолонки(Колонки);
	КонецЕсли;
	Таблица.Сортировать(НомКол);
КонецПроцедуры

//___________________________________________________________________________________________
//Очистить таблицу значений и удалить колонки
Процедура Очистить()Экспорт
	Таблица.КоличествоСтрок(1);
	Таблица.КоличествоФиксСтрок(1);
	Таблица.КоличествоКолонок(0);
КонецПроцедуры
//___________________________________________________________________________________________
//
Функция Итог(Колонка) Экспорт
	Если ТипЗначения(Колонка)=1 Тогда//Число
		НомКол=Колонка-1;
	Иначе//Строка
		НомКол=Таблица.ИдентификаторКолонки(Строка(Колонка));
	КонецЕсли;
	Итог=0;
	Для Сч=1 По Таблица.КоличествоСтрок()-1 Цикл//т.к. строки начинаются с нуля
		Итог=Итог+Число(Таблица.Значение(Сч,НомКол)); 
	КонецЦикла
	Возврат Итог;
КонецФункции
//___________________________________________________________________________________________
//Установить значение ячейки таблицы значений.
Процедура УстановитьЗначение(Стр,Кол,Значение) Экспорт
	Таблица.Значение(Стр,НомерКолонки(Кол),Значение);
КонецПроцедуры

//___________________________________________________________________________________________
//Получить значение заданной ячейки таблицы значений. Возвращает значение заданной ячейки.
Функция ПолучитьЗначение(Стр,Знач Кол)Экспорт
	Возврат Таблица.Значение(Стр,НомерКолонки(Кол));
КонецФункции

//___________________________________________________________________________________________
Функция ТекущаяСтрока(НовСтр) Экспорт
	Возврат Таблица.ТекущаяСтрока(НовСтр);
КонецФункции

//___________________________________________________________________________________________
Функция ВыделеннаяСтрока(НовСтр) Экспорт
	Возврат Таблица.ТекущаяСтрока(НовСтр);
КонецФункции

//___________________________________________________________________________________________
Функция ТекущаяКолонка(Знач НовКол,НомКол) Экспорт
	Если Число(НовКол)>0 Тогда
		НомКол=Таблица.ТекущаяКолонка(НовКол-1)+1;
	Иначе
		НомКол=Таблица.ТекущаяКолонка()+1;
	КонецЕсли;
	Если НомКол=0 Тогда
		Возврат "";
	КонецЕсли
	
		
    Возврат Таблица.ИдентификаторКолонки(НомКол-1);
КонецФункции

//___________________________________________________________________________________________
//
Процедура Загрузить(Массив) Экспорт
	Таблица.Загрузить(Массив);
КонецПроцедуры
//Процедура Загрузить(ТЗ) Экспорт
//    Очистить();
//    Для Сч=1 По ТЗ.КоличествоКолонок() Цикл
//    	НоваяКолонка(ТЗ.ПолучитьПараметрыКолонки(Сч));
//    КонецЦикла;
//    Для Сч1=1 По ТЗ.КоличествоСтрок() Цикл
//        НоваяСтрока();
//        Для Сч2=1 По ТЗ.КоличествоКолонок() Цикл
//        	УстановитьЗначение(Сч1,Сч2,ТЗ.ПолучитьЗначение(Сч1,Сч2)); 
//        КонецЦикла
//    КонецЦикла
//КонецПроцедуры

//___________________________________________________________________________________________
//
Функция ВидимостьКолонки(Колонка,Видимость) Экспорт
	Возврат Таблица.ВидимостьКолонки(НомерКолонки(Колонка),Видимость);
КонецФункции

//___________________________________________________________________________________________
//
Функция ДоступностьКолонки(Колонка,Флаг) Экспорт
	Возврат Таблица.ДоступностьКолонки(НомерКолонки(Колонка),Флаг);
КонецФункции

//___________________________________________________________________________________________
Функция Картинка(НомСтр,Колонка,Значение)Экспорт
	Если ТипЗначения(Колонка)=1 Тогда//Число
		НомКол=Колонка;
	ИначеЕсли ТипЗначения(Колонка)=2 Тогда//Строка
	    НомКол=ПолучитьНомерАтрибута(Колонка); 	 
	КонецЕсли;
	Возврат Таблица.Картинка(НомСтр,НомКол,Значение);
КонецФункции//Картинка





//___________________________________________________________________________________________
Функция Модифицированность(УстФлаг)Экспорт
	Возврат Таблица.Модифицированность(УстФлаг);
КонецФункции//Модифицированность


//******************************************************************************************
//******************************************************************************************
//******************************************************************************************
//******************************************************************************************


//___________________________________________________________________________________________
//Гарантированный возврат номера колонки
//В качестве параметра может задаваться номер или имя колонки
Функция НомерКолонки(Знач Номер)
	Если ТипЗначения(Номер)=2 Тогда//Это имя колонки
		Попытка
			Номер=Таблица.ИдентификаторКолонки(Номер)+1;
		Исключение
			Ошибка(ОписаниеОшибки());
		КонецПопытки
	КонецЕсли
	Если Номер<1 Тогда
		Ошибка("Неправильный номер колонки");
	КонецЕсли
	Возврат Номер-1;
КонецФункции//НомерКолонки


//___________________________________________________________________________________________
Процедура РедакторНоваяСтрока()
	НоваяСтрока();
	НомерРедактируемойСтроки=Таблица.КоличествоСтрок();
	НомерНовойСтроки=НомерРедактируемойСтроки;
	
	Для НомерПервойКолонки=Таблица.КоличествоФиксКолонок() По Таблица.КоличествоКолонок()-1 Цикл
		Если Таблица.ДоступностьКолонки(НомерПервойКолонки)=1 Тогда
			Прервать;
		КонецЕсли
	КонецЦикла
	
	Если НомерПервойКолонки<Таблица.КоличествоКолонок() Тогда
		Если Таблица.ТекущаяСтрока()>=0 Тогда
			Значение=Таблица.Значение(Таблица.ТекущаяСтрока(),НомерПервойКолонки)
			Значение=ЗначениеИзСтроки(ЗначениеВСтроку(Значение));//убираем ссылочность агрегатных объектов
			Таблица.Значение(НомерРедактируемойСтроки-1,НомерПервойКолонки,Значение);
		КонецЕсли
		
		Таблица.ТекущаяЯчейка(НомерРедактируемойСтроки-1,НомерПервойКолонки);
		РедакторНачалоРедактирования();
		Если СостояниеКлавиши("ESCAPE") Тогда
			РедакторОтменитьВводНовойСтроки();
		КонецЕсли
	КонецЕсли
КонецПроцедуры//РедакторНоваяСтрока

//___________________________________________________________________________________________
Процедура РедакторУдалитьСтроку()
	ТекСтрока=Таблица.ТекущаяСтрока();
	УдалитьСтроку(ТекСтрока);
	Если Таблица.КоличествоСтрок()-1<ТекСтрока Тогда
		 ТекСтрока=Таблица.КоличествоСтрок()-1;
	КонецЕсли
	Таблица.ТекущаяЯчейка(ТекСтрока,1);
	НомерРедактируемойСтроки=0;
	НомерНовойСтроки=0;
КонецПроцедуры//РедакторУдалитьСтроку

//___________________________________________________________________________________________
Функция РедакторОтменитьВводНовойСтроки()
	Если НомерНовойСтроки Тогда
		Таблица.ТекущаяСтрока(НомерНовойСтроки-1);
		РедакторУдалитьСтроку();
		Возврат 1;
	КонецЕсли
	НомерРедактируемойСтроки=0;
	НомерНовойСтроки=0;
	Возврат 0;
КонецФункции//РедакторОтменитьВводНовойСтроки


//___________________________________________________________________________________________
Процедура РедакторКопироватьСтроку()
	НомерйСтрокиИсточника=Таблица.ТекущаяСтрока();
	Если НомерйСтрокиИсточника>0 Тогда
		НоваяСтрока();
		НомерНовойСтроки=Таблица.КоличествоСтрок()-1;
		Для А=1 По ПолучитьКоличествоАтрибутов() Цикл
			УстановитьЗначение(НомерНовойСтроки,А,ПолучитьЗначение(НомерйСтрокиИсточника,А));
		КонецЦикла
		Таблица.ТекущаяСтрока(НомерНовойСтроки);
	КонецЕсли
	
КонецПроцедуры//РедакторКопироватьСтроку

//___________________________________________________________________________________________
Процедура РедакторНачалоРедактирования()
	Перем НомерКолонки;
	НомерКолонки=Таблица.ТекущаяКолонка();
	Если Таблица.ВидимостьКолонки(НомерКолонки)=0 ИЛИ Таблица.ДоступностьКолонки(НомерКолонки)=0 Тогда
		НомерКолонки=НомерКолонки+1;
		Если НомерКолонки<Таблица.КоличествоКолонок() Тогда
			Таблица.ТекущаяКолонка(НомерКолонки);
			РедакторНачалоРедактирования();
		Иначе
			НомерНовойСтроки=0;
		КонецЕсли
		Возврат;
	КонецЕсли
	
	НомерРедактируемойСтроки=Таблица.ТекущаяСтрока();


			
	Если СостояниеКлавиши("F2")=0 Тогда//НомерНовойСтроки=0 И
		ТекЗначение=Таблица.Значение(Таблица.ТекущаяСтрока(),Таблица.ТекущаяКолонка());
		Если ТипЗначения(ТекЗначение)>5 И (НомерНовойСтроки ИЛИ ПустоеЗначение(ТекЗначение)=1) Тогда
			Если ТекЗначение.Выбрать() Тогда
				Таблица.Значение(Таблица.ТекущаяСтрока(),Таблица.ТекущаяКолонка(),ТекЗначение);
				ОбработкаСобытия("Окончание редактирования",0,0,0,0,0,0,0);
			КонецЕсли
			Возврат;
		КонецЕсли
	КонецЕсли
	Таблица.Активизировать(Таблица.ТекущаяСтрока(),Таблица.ТекущаяКолонка());
//	СтатусВозврата(0);
КонецПроцедуры//РедакторНачалоРедактирования

//___________________________________________________________________________________________
Процедура РедакторОбновить()
	 //пусто...
КонецПроцедуры//РедакторОбновить



//******************************************************************************************
//******************************************************************************************
//******************************************************************************************
//******************************************************************************************


//___________________________________________________________________________________________
//Метод вызывается один раз для каждоговида документа при начале работы системы
//Выполняет верификацию таблицу БД для набора реквизитов табличной части документа
Функция НачальнаяИнициализация(ТипОбъекта,Вид)Экспорт
	//Табличная часть
	Мета=СоздатьОбъект("Метаданные").Массив.Метаданные;
	МетаОбъект=Мета[ТипОбъекта][Вид]["Табличная часть"];
	Если РазмерСтруктуры(МетаОбъект)>0 Тогда
		ТаблицаДок=СоздатьОбъект("ТаблицаБД");
		ТаблицаДок.ДобавитьПоле("ТекущийДокумент","Документ");
		ТаблицаДок.ДобавитьПоле("ПериодДвижения","Число",17,0);
		ТаблицаДок.ДобавитьПоле("НомерСтроки","Число",17,0);
		Для Б=1 По РазмерСтруктуры(МетаОбъект) Цикл
			Имя=МетаОбъект.ИдентификаторПоНомеру(Б);
			//Проверки
			Если Врег(Имя)="ТЕКУЩИЙДОКУМЕНТ" Тогда
				 Продолжить;
			ИначеЕсли Врег(Имя)="ПЕРИОДДВИЖЕНИЯ" Тогда
				 Продолжить;
			ИначеЕсли Врег(Имя)="НОМЕРСТРОКИ" Тогда
				 Продолжить;
			КонецЕсли
			ТаблицаДок.ДобавитьПоле(Имя,МетаОбъект[Имя].Тип,МетаОбъект[Имя].Длина,МетаОбъект[Имя].Точность);
		КонецЦикла;
		ТаблицаДок.НачальнаяИнициализация(ТипОбъекта+"."+Вид+".ТабличнаяЧасть","DT",0,0);
		Возврат 1;
	КонецЕсли
	Возврат 0;
КонецФункции//НачальнаяИнициализация


//___________________________________________________________________________________________
//Поддержка языка запросов, функция должна возвращать поле, которое имеет тип Дата
Функция ПолучитьПолеПериодаДвижения()Экспорт
	 Возврат "ПериодДвижения";
КонецФункции//ПолучитьПолеПериодаДвижения

//___________________________________________________________________________________________
//Поддержка языка запросов, функция должна возвращать поле, которое принимает одно из вдух значений:
// "+"  - движение приход
// "-"  - движение расход
Функция ПолучитьПолеТипаДвижения()Экспорт
	 Возврат "";
КонецФункции//ПолучитьПолеТипаДвижения
