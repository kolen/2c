Перем ЗапросБД Экспорт;
Перем ИмяТаблицы  Экспорт;
Перем МассивРеквизитов Экспорт;
Перем МассивИмен Экспорт;
Перем СоответствияПолей Экспорт;
Перем БылаИнициализация Экспорт;

Процедура ПриНачалеРаботыСистемы()
	//РазделительСтрок=Симв(13);
	Константа=СоздатьОбъект("Константа");
	УстановитьТолькоЧтение(Константа,1);
КонецПроцедуры

Процедура НачальнаяИнициализация()Экспорт
	БылаИнициализация=1;

	ЗапросБД=СоздатьОбъект("БазаДанных");//объект для работы с базой данных	
	ИмяТаблицы="consts";

	СоответствияПолей=СоздатьОбъект("ТаблицаБД");

	Если МонопольныйРежим() Тогда
	Если СоответствияПолей.ЭтоКлиент()=0 Тогда//учет клиент-серверной архитектуры
		Если ЗапросБД.СуществуетТаблица(ИмяТаблицы)=0 Тогда
			Если ЗапросБД.ТипСоединения()=ConnectionDBF Тогда
				СтрокаЗапроса="CREATE TABLE "+ИмяТаблицы+"(NAME CHAR(50),VALUE CHAR(50))";
			Иначе
				СтрокаЗапроса="CREATE TABLE "+ИмяТаблицы+"(NAME CHAR(50) PRIMARY KEY,VALUE TEXT)";
			КонецЕсли
			
			ЗапросБД.Запрос(СтрокаЗапроса);
		КонецЕсли;
	КонецЕсли
	КонецЕсли
	
	Константа=СоздатьОбъект("Константа");
	УстановитьТолькоЧтение(Константа,1);
	
	//читаем реквизиты
	МассивРеквизитов=0;
	МассивИмен=0;
	Мета=СоздатьОбъект("Метаданные").Массив.Метаданные;
	Если ТипЗначенияСтр(Мета)="Массив" Тогда
		Если ТипЗначенияСтр(Мета.Константа)="Массив" Тогда
			Для А=1 По РазмерСтруктуры(Мета.Константа) Цикл
				Имя=Мета.Константа.ИдентификаторПоНомеру(А);
				МассивИмен[А]=Имя;
				МассивРеквизитов[Имя]=1;
				
				СоответствияПолей.ДобавитьПоле(Имя,Мета.Константа[Имя].Тип,Мета.Константа[Имя].Длина,Мета.Константа[Имя].Точность);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


				
Процедура ПриНачалеРаботыКонфигуратора()
	РазделительСтрок=Симв(13);
КонецПроцедуры
