//Автор:  Alex_Bob 
//E-mail: asbobylk@svsokol.lipetsk.ru
//Версия модуля: 1.01 от 27.07.2004
//Релиз платформы: от 06.07.2004

///////////////////////////////////////////////////////////////////////
//Предопределенная процедура - вызывается при первом открытии формы
Перем Польз;

Процедура ПриОткрытии()
    Польз=СоздатьОбъект("Пользователи");
    ТЗ.НоваяКолонка("Ид",,,,"№",20);
    ТЗ.НоваяКолонка("Имя",,,,"Login",40);
    ТЗ.НоваяКолонка("ПолноеИмя",,,,"Полное имя",50);
    Польз.ВыбратьЭлементы();
    Пока Польз.ПолучитьЭлемент()=1 Цикл
    	ТЗ.НоваяСтрока();
    	ТЗ.ИД=Польз.ИД;
    	ТЗ.Имя=Польз.Имя;
    	ТЗ.ПолноеИмя=Польз.ПолноеИмя;
    КонецЦикла;
    Если ТЗ.КоличествоСтрок()>0 Тогда
        ТЗ.ТекущаяСтрока(1);
    КонецЕсли;
    
КонецПроцедуры

///////////////////////////////////////////////////////////////////////
//Предопределенная процедура - вызывается при закрытии формы
Процедура ПриЗакрытии()
//	Если СостояниеКлавиши(27) Тогда
//		СтатусВозврата(0);
//	КонецЕсли;
КонецПроцедуры

///////////////////////////////////////////////////////////////////////
//Процедура обработки нажатия кнопки Закрыть - выполняет закрытие формы
Процедура ЗакрытьФорму()
	Форма.Закрыть();
КонецПроцедуры

///////////////////////////////////////////////////////////////////////
//Процедура обработки нажатия кнопки КнНовый
Процедура НовыйПольз()
    Сп=СоздатьОбъект("СписокЗначений");
    ИД=Число(ПолучитьЗначениеЗапроса("SELECT max("+Польз.ПолучитьИмяПоляБД("ИД")+") FROM "+Польз.ИмяТаблицыОбъекта()))+1;
    Сп.ДобавитьЗначение(ИД);
    Сп.ДобавитьЗначение("Новый");
    Польз.НачатьТранзакцию();
    ОткрытьФормуМодально("Объекты\Пользователи\Формы\Пользователь",Сп);
    ЗначениеИзФайла(КаталогВременныхФайлов()+"lst.txt",Сп);
    ФС=СоздатьОбъект("Файловая система");
    ФС.УдалитьФайл(КаталогВременныхФайлов()+"lst.txt");
    Ответ=Вопрос("Сохранить изменения?",4);
    Если Ответ=6 Тогда
    	Польз.Новый();
    	Польз.ИД=Сп.ПолучитьЗначение(1);
    	Польз.Имя=Сп.ПолучитьЗначение(2);
    	Польз.ПолноеИмя=Сп.ПолучитьЗначение(3);
    	Польз.НаборПрав=Сп.ПолучитьЗначение(4);
    	Польз.ДомашнийКаталог=Сп.ПолучитьЗначение(5);
    	Польз.Интерфейс=Сп.ПолучитьЗначение(6);
    	
    	Польз.Записать();
        Польз.ЗафиксироватьТранзакцию();    
    Иначе
        Польз.ОтменитьТранзакцию();	 
    КонецЕсли;
    
    ТЗ.НоваяСтрока();
    ТЗ.ИД=Польз.ИД;
    ТЗ.Имя=Польз.Имя;
    ТЗ.ПолноеИмя=Польз.ПолноеИмя;
    ТЗ.ПолучитьСтрокуПоНомеру(ТЗ.КоличествоСтрок());
    //Форма.Обновить();
КонецПроцедуры //НовыйПольз

///////////////////////////////////////////////////////////////////////
//Процедура обработки нажатия кнопки КнИзменить
Процедура ИзменитьПольз()
	Если ТЗ.ТекущаяСтрока()=0 Тогда
		Предупреждение("Выберите конкретную строку списка!");
		Возврат; 
	КонецЕсли
	Если СокрЛП(ТЗ.Имя)="admin" Тогда
		Предупреждение("Пользователя admin изменять нельзя!");
		Возврат
	КонецЕсли
    Сп=СоздатьОбъект("СписокЗначений");
    Польз.УстановитьИмяИдентификатора("ИД");
	Польз.УстановитьИдентификаторОбъекта(ТЗ.ИД);
	Польз.НайтиЭлементВБД();
    ТЗ.ПолучитьСтрокуПоНомеру(ТЗ.ТекущаяСтрока());
    Сп.ДобавитьЗначение(Польз.ИД);
    Сп.ДобавитьЗначение(Польз.Имя);
    Сп.ДобавитьЗначение(Польз.ПолноеИмя);
    Сп.ДобавитьЗначение(Польз.НаборПрав);
    Сп.ДобавитьЗначение(Польз.ДомашнийКаталог);
    Сп.ДобавитьЗначение(Польз.Интерфейс);
    Польз.НачатьТранзакцию();
    ОткрытьФормуМодально("Объекты\Пользователи\Формы\Пользователь",Сп);
    ЗначениеИзФайла(КаталогВременныхФайлов()+"lst.txt",Сп);
    ФС=СоздатьОбъект("Файловая система");
    ФС.УдалитьФайл(КаталогВременныхФайлов()+"lst.txt");
    Ответ=Вопрос("Сохранить изменения?",4);
    Если Ответ=6 Тогда
        Польз.УстановитьИмяИдентификатора("ИД");
		Польз.УстановитьИдентификаторОбъекта(ТЗ.ИД);
		Польз.НайтиЭлементВБД();
    	Польз.Имя=Сп.ПолучитьЗначение(2);
    	Польз.ПолноеИмя=Сп.ПолучитьЗначение(3);
    	Польз.НаборПрав=Сп.ПолучитьЗначение(4);
    	Польз.ДомашнийКаталог=Сп.ПолучитьЗначение(5);
    	Польз.Интерфейс=Сп.ПолучитьЗначение(6);
    	Польз.Записать();
        Польз.ЗафиксироватьТранзакцию();
    Иначе
        Польз.ОтменитьТранзакцию();	 
    КонецЕсли;
    
    ТЗ.ИД=Польз.ИД;
    ТЗ.Имя=Польз.Имя;
    ТЗ.ПолноеИмя=Польз.Имя;
    
    //Форма.Обновить();
КонецПроцедуры //ИзменитьПольз

///////////////////////////////////////////////////////////////////////
//Процедура обработки нажатия кнопки КнУдалить
Процедура УдалитьПольз()
	Если ТЗ.ТекущаяСтрока()=0 Тогда
		Предупреждение("Выберите конкретную строку списка!");
		Возврат; 
	КонецЕсли
	ТЗ.ПолучитьСтрокуПоНомеру(ТЗ.ТекущаяСтрока());
	Если СокрЛП(ТЗ.Имя)="admin" Тогда
		Предупреждение("Пользователя admin удалять нельзя!");
		Возврат
	КонецЕсли
	Ответ=Вопрос("Вы действительно хотите удалить пользователя "+ТЗ.Имя+"?",4);
	Если Ответ=6 Тогда
		Польз.УстановитьИмяИдентификатора("ИД");
		Польз.УстановитьИдентификаторОбъекта(ТЗ.ИД);
		Польз.Удалить();
		ТЗ.УдалитьСтроку(ТЗ.ТекущаяСтрока()); 
	КонецЕсли
КонецПроцедуры //УдалитьПольз  

/////////////////////////////////////////////////////////////////////

Функция ПолучитьЗначениеЗапроса(Текст)
	Польз.Запрос(Текст);
	Если Польз.ПолучитьСтроку()=1 Тогда
		Возврат Польз.ПолучитьПоле(1);
	КонецЕсли
	Возврат "";
КонецФункции

///////////////////////////////////////////////////////////////////////
//Процедура обработки нажатия кнопки КнИзменитьПароль
Процедура ИзменитьПароль()
	Если ТЗ.ТекущаяСтрока()=0 Тогда
		Предупреждение("Выберите конкретную строку списка!");
		Возврат; 
	КонецЕсли
    Сп=СоздатьОбъект("СписокЗначений");
	ТЗ.ПолучитьСтрокуПоНомеру(ТЗ.ТекущаяСтрока());
	Сп.ДобавитьЗначение(ТЗ.Имя);
	ОткрытьФормуМодально("Объекты\Пользователи\Формы\ИзменитьПароль",Сп);
	ЗначениеИзФайла(КаталогВременныхФайлов()+"lst.txt",Сп);
    ФС=СоздатьОбъект("Файловая система");
    ФС.УдалитьФайл(КаталогВременныхФайлов()+"lst.txt");
    Если Сп.ПолучитьЗначение(2)<1 Тогда
    	Возврат; 
    КонецЕсли
    Польз.УстановитьИмяИдентификатора("ИД");
	Польз.УстановитьИдентификаторОбъекта(ТЗ.ИД);
    Польз.НайтиЭлементВБД();
    Польз.Пароль=GetHash(Сп.ПолучитьЗначение(1));
    Польз.Записать();
КонецПроцедуры //ИзменитьПароль  