Перем Вид;
Перем Атрибут;
Перем ДиалоговыйЭлемент;
Перем ИзменятьВид;
//******************************************************************************************
//Атрибуты объекта доступные через точку (переменные с признаком Экспорт)
//******************************************************************************************
//...

//******************************************************************************************
//Внутренние переменные
//******************************************************************************************
//...

//******************************************************************************************
//Предопределенные процедуры и функции объекта
//******************************************************************************************

//МасПеречислений:Массив
//___________________________________________________________________________________________
//Динамическое получение атрибутов
Функция ПолучитьАтрибут(Имя) Экспорт
	
	//смотрим может конкретный вид перечисления не выбран
	Если ПустоеЗначение(Вид)=1 Тогда
		ПроверитьВид(Имя);
		Возврат СоздатьОбъект("Перечисление."+Имя);
	КонецЕсли
	
	//может мы находимся на нижнем уровне перечисления (на уровне значения)
	Если ПустоеЗначение(Атрибут)=0 Тогда
		Ошибка("Значение перечисления не имеет атрибутов");
	КонецЕсли
	
	
	//Вид выбран - работаем с его атрибутами
	ПроверитьАтрибут(Имя);
	Возврат СоздатьОбъект("Перечисление."+Вид+"."+Имя);
	
	//МасПеречислений
КонецФункции

//___________________________________________________________________________________________
//Динамическое задание атрибутов
Процедура УстановитьАтрибут(Имя,Значение) Экспорт
	Ошибка("Объект работает только в режиме чтения");
КонецПроцедуры

//___________________________________________________________________________________________
Функция ПолучитьИмяАтрибута(Номер)Экспорт
	//смотрим может конкретный вид перечисления не выбран
	Если ПустоеЗначение(Вид)=1 Тогда
		Возврат МасПеречислений.ИдентификаторПоНомеру(Номер);
	КонецЕсли
	
	//может мы находимся на нижнем уровне перечисления (на уровне значения)
	Если ПустоеЗначение(Атрибут)=0 Тогда
		Ошибка("Значение перечисления не имеет атрибутов");
	КонецЕсли
	
	//Вид выбран - работаем с атрибутами
	Возврат МасПеречислений[Вид].ИдентификаторПоНомеру(Номер);
КонецФункции
//___________________________________________________________________________________________
Функция ПолучитьКоличествоАтрибутов()Экспорт
	//смотрим может конкретный вид перечисления не выбран
	Если ПустоеЗначение(Вид)=1 Тогда
		Возврат РазмерСтруктуры(МасПеречислений);
	КонецЕсли
	
	//может мы находимся на нижнем уровне перечисления (на уровне значения)
	Если ПустоеЗначение(Атрибут)=0 Тогда
		Возврат 0;
	КонецЕсли
	
	//Вид выбран - работаем с атрибутами
	Возврат РазмерСтруктуры(МасПеречислений[Вид]);
КонецФункции
//___________________________________________________________________________________________
//Установка внутреннего идентификатора (номера в БД) объекта 
//(или условное позиционирование объекта)
Процедура УстановитьИдентификаторОбъекта(НовИдентификатор)Экспорт
	Атрибут=НовИдентификатор;
КонецПроцедуры

//___________________________________________________________________________________________
//Получение внутреннего идентификатора объекта 
Функция ПолучитьИдентификаторОбъекта()Экспорт
	Возврат Атрибут;
КонецФункции

//___________________________________________________________________________________________
//Строковое представление объекта
Функция ПолучитьПредставлениеОбъекта()Экспорт
	Если ПустоеЗначение(Атрибут)=0 Тогда
		Возврат ПолучитСинонимАтрибута(Атрибут);
	КонецЕсли
КонецФункции


//___________________________________________________________________________________________
//Признак не пустого значения
Функция Выбран()Экспорт
	Возврат 1-ПустоеЗначение(Атрибут);
КонецФункции

//___________________________________________________________________________________________
//Строковое значение типа объекта
Функция ПолучитьТипОбъекта()Экспорт
	Возврат "Перечисление";
КонецФункции

//___________________________________________________________________________________________
//Конструктор (вызывается при инициализации объекта)
//ВидОбъекта - вид объекта, задающийся строкой следуемой за символом "."
//Параметр - произвольный параметр (для визуальных элементов - объект базового класса)
Процедура Конструктор(ВидОбъекта,Параметр)Экспорт
	ИД=0;
	
	Если ПустоеЗначение(ВидОбъекта)=0 Тогда
		Рез=Найти(ВидОбъекта,".");
		Если Рез>0 Тогда
			Атрибут=Сред(ВидОбъекта,Рез+1);
			Вид=Лев(ВидОбъекта,Рез-1);
		Иначе
			Вид=ВидОбъекта;
		КонецЕсли
		
		//УстановитьИдентификаторОбъекта(ВидОбъекта);
		
		ПроверитьВид(Вид);
		Если ПустоеЗначение(Атрибут)=0 Тогда
			ПроверитьАтрибут(Атрибут);
		КонецЕсли
	КонецЕсли
	
	//поддержка визуального отображения значений на форме диалога
	Если ТипЗначенияСтр(Параметр)="СписокЗначений" Тогда
		ДиалоговыйЭлемент=Параметр;
		Для А=1 По ПолучитьКоличествоАтрибутов() Цикл
			ТекАтрибут=ПолучитьИмяАтрибута(А);
			Параметр.ДобавитьЗначение(ТекАтрибут,ПолучитСинонимАтрибута(ТекАтрибут));
		КонецЦикла
	ИначеЕсли ТипЗначенияСтр(Параметр)="Строка" Тогда
		ДиалоговыйЭлемент=Параметр;
		ДиалоговыйЭлемент.Редактирование(0);
	КонецЕсли
	
	ИзменятьВид=ПустоеЗначение(Вид);
КонецПроцедуры

//___________________________________________________________________________________________
//Деструктор (вызывается при удалении объекта)
//Процедура Деструктор()Экспорт
//
//КонецПроцедуры




//___________________________________________________________________________________________
//Обрабочик событий визуального объекта
//Возвращает:
//0 - событие не обработано (передается в форму для дальнейшей обработки)
//1 - событие обработано (далее в форму не передается)
Функция ОбработкаСобытия(ИмяСобытия) Экспорт//ИмяСобытия - имя события как оно задано в окне свойств конфигуратора
	Если ИмяСобытия="Выбор" Тогда
		Если СостояниеКлавиши("SHIFT") ИЛИ СостояниеКлавиши("DELETE") Тогда//очистка значения
			УстановитьЗначение("");
		Иначе
			Выбрать();
		КонецЕсли
	КонецЕсли;
	Возврат 0;
КонецФункции

//___________________________________________________________________________________________
//Открытие стандартной формы редактирования объекта
Функция ОткрытьФормуОбъекта() Экспорт
	
КонецФункции
//___________________________________________________________________________________________
//Вызывается при открытии любой подчиненной формы
Процедура ОбработкаОткрытияФормы(Конт)Экспорт
	
КонецПроцедуры

//___________________________________________________________________________________________
//Вызывается при попытке присвоить значение диалоговому элементу или запрещенной для записи переменной
Процедура УстановитьЗначение(Значение)Экспорт
	Если ТипЗначенияСтр(Значение)<>ПолучитьТипОбъекта() Тогда
		Атрибут="";
		Если ИзменятьВид=1 Тогда
			Вид="";
		КонецЕсли
		Возврат;
	КонецЕсли
	
	//	Ошибка("Объект работает только в режиме чтения");
	Если ПустоеЗначение(Вид)=1 Тогда
		НазначитьВид(Значение.Вид());
	КонецЕсли
	
	Если ИзменятьВид=0 Тогда
		Если ВРЕГ(Вид)<>ВРЕГ(Значение.Вид()) Тогда
			Ошибка("Виды не совпадают");
		КонецЕсли
	КонецЕсли
	
	//Если Значение.ПолучитьКоличествоАтрибутов()=0 Тогда
	Атрибут=Строка(Значение.ПолучитьИдентификаторОбъекта());
	//КонецЕсли
КонецПроцедуры

//___________________________________________________________________________________________
//Возвращает текущий вид объекта (вызывается при выгрузке значения в строку)
Функция Вид() Экспорт
	Возврат Вид;
КонецФункции
//******************************************************************************************
//Методы объекта доступные через точку (процедуры и функции с признаком Экспорт)
//******************************************************************************************

//___________________________________________________________________________________________
Функция НазначитьВид(ВидОбъекта)Экспорт
	Если Сокрлп(ВидОбъекта)="" Тогда
		Ошибка("Не задан вид");
	КонецЕсли
	ПроверитьВид(ВидОбъекта);
	Вид=ВидОбъекта;
КонецФункции

//___________________________________________________________________________________________
Процедура НеИзменятьВид(Флаг)Экспорт
	ИзменятьВид=1-Флаг;
КонецПроцедуры//НеИзменятьВид


//******************************************************************************************
//Внутренние процедуры и функции
//******************************************************************************************

//___________________________________________________________________________________________
Процедура ПроверитьВид(ИмяВида)
	Если МасПеречислений.НайтиИдентификатор(ИмяВида)=0 Тогда
		Ошибка("Требуемый вид перечисления не найден ("+ИмяВида+")");
	КонецЕсли
КонецПроцедуры//ПроверитьВид

//___________________________________________________________________________________________
Процедура ПроверитьАтрибут(ИмяАтрибута)
	Если МасПеречислений[Вид].НайтиИдентификатор(ИмяАтрибута)=0 Тогда
		Ошибка("Требуемый атрибут перечисления не найден ("+ИмяАтрибута+")");
	КонецЕсли
КонецПроцедуры//ПроверитьВид

//___________________________________________________________________________________________
Процедура Выбрать()
	Если ПустоеЗначение(Вид)=1 Тогда
		Возврат;
	КонецЕсли
	
	Если ТипЗначенияСтр(ДиалоговыйЭлемент)="СписокЗначений" Тогда
		Возврат;
	КонецЕсли
	
	
	Спис=СоздатьОбъект("СписокЗначений");
	Для А=1 По МасПеречислений[Вид].РазмерСтруктуры() Цикл
		Стр=МасПеречислений[Вид].ИдентификаторПоНомеру(А);
		Спис.ДобавитьЗначение(Стр,ПолучитСинонимАтрибута(Стр));
	КонецЦикла
	
	Спис.ВыбратьЗначение(Атрибут,"",0,0,2);
КонецПроцедуры//Выбрать

//управление диалоговым элементом
//___________________________________________________________________________________________
Функция Видимость(Парам)Экспорт
	Возврат ДиалоговыйЭлемент.Видимость(Парам);
КонецФункции
//___________________________________________________________________________________________
Функция Доступность(Парам)Экспорт
	Возврат ДиалоговыйЭлемент.Доступность(Парам);
КонецФункции
//___________________________________________________________________________________________
Функция Заголовок(Парам)Экспорт
	Возврат ДиалоговыйЭлемент.Заголовок(Парам);
КонецФункции
//___________________________________________________________________________________________
Функция Редактирование(Парам)Экспорт
	Возврат ДиалоговыйЭлемент.Редактирование(Парам);
КонецФункции
//___________________________________________________________________________________________
Функция Маска(Парам)Экспорт
	Возврат ДиалоговыйЭлемент.Маска(Парам);
КонецФункции
//___________________________________________________________________________________________
Функция Модифицированность(Парам)Экспорт
	Возврат ДиалоговыйЭлемент.Модифицированность(Парам);
КонецФункции
//___________________________________________________________________________________________
Функция Активизировать(Парам)Экспорт
	Возврат ДиалоговыйЭлемент.Активизировать(Парам);
КонецФункции


//___________________________________________________________________________________________
Функция ПолучитСинонимАтрибута(ТекАтрибут)
	//смотрим может конкретный вид перечисления не выбран
	Если ПустоеЗначение(Вид)=1 Тогда
		Синоним=ПолучитьСинонимОбъектаМД(ТипОбъекта()+"/"+ТекАтрибут);
	Иначе
		Синоним=ПолучитьСинонимОбъектаМД(ТипОбъекта()+"/"+Вид+"/"+ТекАтрибут);
	КонецЕсли
	
	Если ПустоеЗначение(Синоним) Тогда
		Возврат ТекАтрибут;
	Иначе
		Возврат Синоним;
	КонецЕсли
КонецФункции//ПолучитСинонимАтрибута
