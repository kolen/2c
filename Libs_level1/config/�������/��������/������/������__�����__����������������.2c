Перем ТекДерево;
Перем ИмяОбъекта;
Перем РежимОбъекта;
Перем БазовРеквизиты;
Перем КартинкаЭлемента;
Перем КартинкаЭлементаГр;

//******************************************************************************************
//Предопределенные процедуры и функции в режиме Конфигуратора
//******************************************************************************************
Процедура ПриНачалеРаботыКонфигуратора()
	КартинкаЭлементаГр	=84;
	КартинкаЭлемента	=216;
	ИмяОбъекта="Документ";
	РежимОбъекта["Модуль проведения"]=1;
	РежимОбъекта["Список элементов"]=1;
	РежимОбъекта["Форма диалога"]=1;
	РежимОбъекта["Форма группы"]=0;
	РежимОбъекта["Таблицы"]=1;
	РежимОбъекта["Реквизиты"]=217;
	РежимОбъекта["Табличная часть"]=218;

	БазовРеквизиты=СоздатьОбъект("Структура");
	БазовРеквизиты.ДатаДок=1;
	БазовРеквизиты.НомерДок=1;
	
	
	ПодписатьсяНаСобытие("СписокПредопределенныхПроцедур","ОбработкаДобавленияПредопределенныхПроцедур");
КонецПроцедуры 

//___________________________________________________________________________________________
//Процедура вызывается при открытии дерева метаданных
//Здесь долен быть прописан код по заполнению элементов дерева объекта
//Дерево - объект типа ДеревоЗначений
//ПапкаМетаданных - элемент дерева, который является родителем для данного объекта
//Дерево:ДеревоЗначений
Процедура ПриЗагрузкеКонфигурации(Дерево,ПапкаМетаданных)
    ТекДерево=Дерево;
    
	ТекЭлементДерева=Дерево.ВставитьЭлемент(ИмяОбъекта,КартинкаЭлементаГр,ПапкаМетаданных);
	ТекДерево.УстановитьТипОбъекта(ТекЭлементДерева,0,1,"ВводНовогоВида",КартинкаЭлемента,1);
    
	ЗагрузитьСтруктуруОбъекта(Контекст,ТекЭлементДерева);
КонецПроцедуры

//___________________________________________________________________________________________
//ТекДерево:ДеревоЗначений
Процедура ВводНовогоВида()
	
	Если ТекДерево.ПолучитьТекст(ТекДерево.ПолучитьРодителя(ТекДерево.ВыделенныйЭлемент()))="Метаданные" Тогда
		ОткрытьФорму("ОбщиеНастройки",,,"НастройкиДокументов");
		Возврат;
	КонецЕсли

	Если ТекДерево.ЭтоГруппа(ТекДерево.ВыделенныйЭлемент())=0 Тогда
		ЗагрузитьСтруктуруВида(Контекст,ТекДерево.ВыделенныйЭлемент(),"");
	КонецЕсли
КонецПроцедуры//ВводНовогоВида


//___________________________________________________________________________________________
//СписокЗначений:СписокЗначений
Процедура ОбработкаДобавленияПредопределенныхПроцедур(Результат,СписокЗначений,ПутьФормы)
	Если Лев(ПутьФормы,20)<>"Метаданные\Документ\" Тогда
		Возврат;
	КонецЕсли
	
	Если Прав(ПутьФормы,17)="Модуль проведения" Тогда
		СписокЗначений.ДобавитьЗначение("Процедура ОбработкаПроведения(Парам)//Предопределенная процедура, вызываемая из метода Провести");
		СписокЗначений.ДобавитьЗначение("Процедура ОбработкаУдаленияПроведения()//Предопределенная процедура, вызываемая из методов: СделатьНеПроведенным, Удалить");
	ИначеЕсли Прав(ПутьФормы,13)="Форма диалога" Тогда
		СписокЗначений.ДобавитьЗначение("Процедура ВводНового(ПризнКопирования,ОбъектКопирования)//Предопределенная процедура, вызваемая при интерактивном вводе нового документа");
		СписокЗначений.ДобавитьЗначение("Процедура ВводНаОсновании(ДокументОснование)//Предопределенная процедура, вызываемая при интерактивном вводе нового документа на основании");
		СписокЗначений.ДобавитьЗначение("Процедура ПриЗаписи()//Предопределенная процедура при интерактивной записи документа");
		СписокЗначений.ДобавитьЗначение("Процедура ПриВводеСтроки()//Предопределенная процедура при интерактивном вводе строки документа");
		СписокЗначений.ДобавитьЗначение("Процедура ПриРедактированииНовойСтроки()//Предопределенная процедура при интерактивном редактировании новой строки документа");
		СписокЗначений.ДобавитьЗначение("Процедура ПриНачалеРедактированияСтроки()//Предопределенная процедура при интерактивном редактировании строки документа");
		СписокЗначений.ДобавитьЗначение("Процедура ПриОкончанииРедактированияСтроки(ФлагНовСтр)//Предопределенная процедура при окончании редактирования строки многострочной части документа");
		СписокЗначений.ДобавитьЗначение("Процедура ПриУдаленииСтроки()//Предопределенная процедура при интерактивном удалении строки документа");
	ИначеЕсли Прав(ПутьФормы,16)="Список элементов" Тогда
	Иначе
		//Сообщить("ПутьФормы="+ПутьФормы+"   СписокЗначений="+СписокЗначений);
	КонецЕсли

КонецПроцедуры
