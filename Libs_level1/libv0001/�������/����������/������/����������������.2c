//*******************************************************************************************
//Поддержка Клиент-Серверной арихитектуры
//*******************************************************************************************
Перем ФС;//глобальная переменная для блокировки файла сервера
Перем СерверБД;

Перем ТаблБДКлиентов[];

Перем ТаблИДКлиентов[];
Перем ЧислоПодключений;

Перем КлиентИД;
Перем КлиентБД Экспорт;

Перем ФлагОтветаСервера;
Перем РезультатСервера;

#Задать ИмяФайлаСервера КаталогИБ()+"server.lck"
#Задать ИмяФайлаАдресаСервера КаталогИБ()+"server.inf"


//___________________________________________________________________________________________
Функция АдресСервераПриложений(Порт=0)
	Если ФС.СуществуетФайл(ИмяФайлаСервера)=0 Тогда
		 Возврат "";
	КонецЕсли
	
	
	Если ФС.СуществуетФайл(ИмяФайлаАдресаСервера)=0 Тогда
		Ошибка("Нет адреса сервера приложений");//нераспознная ошибка
	КонецЕсли
	
	Т=СоздатьОбъект("Текст");
	Т.Открыть(ИмяФайлаАдресаСервера);
	Адрес=Т.ПолучитьСтроку(1);
	Порт=Т.ПолучитьСтроку(2);
	Возврат Адрес;
КонецФункции//АдресСервераПриложений
//___________________________________________________________________________________________
Функция ЕстьСерверПриложений()
	Попытка
		ФС.УдалитьФайл(ИмяФайлаСервера);
		Возврат ФС.СуществуетФайл(ИмяФайлаСервера);
	Исключение
		Возврат 1;
	КонецПопытки
КонецФункции//ЕстьСерверПриложений


//___________________________________________________________________________________________
//Процедура ПриНачалеРаботыСистемы()//Начальная процедура инициализации в режиме предприятия

//******************************************************************************************
//Начальная инициализация модуля - процедура вызывается в режиме Конфигуратора и Предприятия
//******************************************************************************************
Процедура ИнициализацияМодуля()

	ФС=СоздатьОбъект("Файловая система");

	КлиентБД=0;
	СерверБД=0;
	
//#define server	
#Если server
	Если ЕстьСерверПриложений()=1 Тогда
		 Предупреждение("Ошибка: сервер приложений уже запущен по адресу "+АдресСервераПриложений());
		 ЗавершитьРаботуСистемы();
		 Возврат;
	КонецЕсли
	
	СерверБД=СоздатьОбъект("Сервер");

	СерверЗапущен=0;	
	АдресСервераПриложений=СерверБД.ПолучитьЛокальныйАдрес();
	//определяем доступный порт (т.к. на одном компьютере может быть несколько серверов приложений)
	Для НомерПорта=19760 По 20000 Цикл
		СерверБД.Порт(НомерПорта);
		Попытка
			СерверБД.Запустить();
			Рез=1;//никого нет
		Исключение
			Рез=0;//уже есть другой сервер приложений (из другого каталога ИБ)
		КонецПопытки
		Если Рез=1 Тогда
			Т=СоздатьОбъект("Текст");
			Т.ДобавитьСтроку(АдресСервераПриложений);
			Т.ДобавитьСтроку(НомерПорта);
			Т.Записать(ИмяФайлаАдресаСервера);
			
			Т=СоздатьОбъект("Текст");
			Т.ДобавитьСтроку(1);
			Т.Записать(ИмяФайлаСервера);
			ФС.ЗаблокироватьФайл(ИмяФайлаСервера);//признак живого сервера приложений
			СерверЗапущен=1;
			МСообщить("Сервер запущен");
			Прервать;
		КонецЕсли
	КонецЦикла
	Если СерверЗапущен=0 Тогда
		Предупреждение("Ошибка: системе не удалось найти свободный сетевой порт");
		ЗавершитьРаботуСистемы();
		Возврат;
	КонецЕсли
	
	ЧислоПодключений=0;
	
#Иначе
	Если ЕстьСерверПриложений()=1 Тогда
		НомерПорта=0;
		АдресСервераПриложений=АдресСервераПриложений(НомерПорта);
		Попытка
			Состояние("Соединение с сервером приложений");
			КлиентБД=СоздатьОбъект("Клиент");
			КлиентБД.Порт(НомерПорта);
			КлиентБД.Соединение(АдресСервераПриложений);

			//формируем уникальный ИД клиента			
			//ИДКлиента=""+СоздатьОбъект("Сервер").ПолучитьЛокальныйАдрес()+"-"+_GetPerformanceCounter(); 
			//Сообщить("Ид клиента="+ИДКлиента);
			
			Состояние("Идентификация");
			Пока 1 Цикл
				Пауза(500);
				КлиентБД.Отправить("GET ID");
				КлиентИД=Число(КлиентБД.Получить());
				Если КлиентИД<>0 Тогда
					 Прервать;
				КонецЕсли
			КонецЦикла
			
			Сообщить("Адрес сервера приложений="+АдресСервераПриложений+":"+НомерПорта+" КлиентИД="+КлиентИД);
			Состояние("");
			//глТекТипСоединения=КомандаСерверуПриложений("ТИПСОЕДИНЕНИЯ",0);
			//Сообщить("глТекТипСоединения="+глТекТипСоединения);
			ПериодОбновленияБД=10;
		Исключение
			Сообщить(ОписаниеОшибки());
			Сообщить("Внимание: дальнейшая работа будет выполняться не через сервер приложений");
			КлиентБД=0;
		КонецПопытки
	КонецЕсли
#КонецЕсли	
КонецПроцедуры


//___________________________________________________________________________________________
Процедура ОбработкаСоединения(Объект,Данные,ИмяХоста,ID)
	Если ТипЗначенияСтр(Объект)="Сервер" Тогда//Объект:Сервер
		МСообщить("Клиент: "+ИмяХоста+" ID="+ID+" "+Данные);
		Если Данные="Соединение выполнено" Тогда
			//Объект.Отправить(""+Данные+". Клиент: "+ИмяХоста+" ID="+ID);
		Иначе//Отключение
			ТекНомерПодключения=ПолучитьНомерПодключения(ID);
			Если ТекНомерПодключения>0 Тогда
				 ОтключитьКлиента(ТекНомерПодключения);
				 ТаблИДКлиентов[Число(ID)]=0;
			КонецЕсли
		КонецЕсли
	Иначе//Объект:Клиент
	
	КонецЕсли
КонецПроцедуры//ОбработкаСоединения

//___________________________________________________________________________________________
Процедура ОбработкаДанных(Объект,Данные,ИмяХоста,ID)
	Если ТипЗначенияСтр(Объект)="Сервер" Тогда//Объект:Сервер
		ТекНомерПодключения=ПолучитьНомерПодключения(ID);
		Если Данные="GET ID" Тогда
			//Сообщить(Данные);
			Если ТекНомерПодключения=0 Тогда
				ЧислоПодключений=ЧислоПодключений+1;
				ТекНомерПодключения=ЧислоПодключений;
				ПодключитьКлиента(ID,ТекНомерПодключения);
			КонецЕсли
			Объект.Отправить(ТекНомерПодключения);
		Иначе
			Если ТипЗначения(Данные)=5 Тогда
				КлиентНомерПодключения=Число(Данные.ИД);
				Если КлиентНомерПодключения<=0 Тогда
					СтрОшибки=""+ИмяХоста+" Не было начальной инициализации подключения (GET ID)";
					Сообщить(СтрОшибки);
					Объект.Отправить(СтрОшибки);
					Возврат;
				КонецЕсли
				Если КлиентНомерПодключения>ЧислоПодключений Тогда//видимо сервер приложений перегружался
					СтрОшибки=""+ИмяХоста+" Ошибка контекста (требуется перезапуск клиента)";
					Сообщить(СтрОшибки);
					Объект.Отправить(СтрОшибки);
					Возврат;
//					ЧислоПодключений=КлиентНомерПодключения;
//					ТекНомерПодключения=ЧислоПодключений;
//					ПодключитьКлиента(ID,ТекНомерПодключения);
				КонецЕсли
				
				Если ТекНомерПодключения=0 Тогда
					ПодключитьКлиента(ID,КлиентНомерПодключения);
				ИначеЕсли ТекНомерПодключения<>КлиентНомерПодключения Тогда
//					СтрОшибки=""+ИмяХоста+" Недопустимый номер подключения: номер "+КлиентНомерПодключения+" должен быть = "+ТекНомерПодключения;
//					Сообщить(СтрОшибки);
//					Объект.Отправить(СтрОшибки);
//					Возврат;
					ТекНомерПодключения=КлиентНомерПодключения;
					ТаблИДКлиентов[Число(ID)]=ТекНомерПодключения;
				КонецЕсли
				
				
				Команда=ВРЕГ(Данные.Команда);
				Значение=Данные.Значение;
				Попытка
					БДКлиента=ТаблБДКлиентов[ТекНомерПодключения];
					МСообщить(""+ИмяХоста+" "+Команда+":"+Значение);
					Если Команда="SQL" Тогда
						 Результат=БДКлиента.ВернутьРезультатЗапроса(Значение);
						 МСообщить("END");
						 Объект.Отправить(Результат);
						 МСообщить("SEND");
						 Возврат;
					ИначеЕсли Команда="ПРОВЕСТИ" Тогда
						 Сообщить("Проведение "+Значение);
						 Результат=Значение.Провести();
						 Объект.Отправить(Результат);
						 Возврат;
					ИначеЕсли Команда="ВЫПОЛНИТЬ" Тогда
						МСообщить("Выполнение команды: "+Значение);
						ОписаниеОшибки("");
						Результат=Выражение(Значение);
						Если ОписаниеОшибки()="" Тогда
							Структура=СоздатьОбъект("Структура");
							Структура.Результат=Результат;
							Объект.Отправить(Структура);
						Иначе
							Объект.Отправить(ОписаниеОшибки());
						КонецЕсли
						Возврат;
					ИначеЕсли Команда="СУЩЕСТВУЕТТАБЛИЦА" Тогда
						Результат=Число(БДКлиента.СуществуетТаблица(Значение));
						МСообщить("Результат="+Результат);
						Объект.Отправить(Результат);
						Возврат;
					ИначеЕсли Команда="ПОЛУЧИТЬИДЕНТИФИКАТОР" Тогда
						Результат=БДКлиента.ПолучитьИдентификатор();
						МСообщить("Результат="+Результат);
						Объект.Отправить(Результат);
						Возврат;
					ИначеЕсли Команда="НАЧАТЬТРАНЗАКЦИЮ" Тогда
						Результат=БДКлиента.НачатьТранзакцию();
						Объект.Отправить(Результат);
						Возврат;
					ИначеЕсли Команда="ЗАФИКСИРОВАТЬТРАНЗАКЦИЮ" Тогда
						Результат=БДКлиента.ЗафиксироватьТранзакцию();
						Объект.Отправить(Результат);
						Возврат;
					ИначеЕсли Команда="ОТМЕНИТЬТРАНЗАКЦИЮ" Тогда
						Результат=БДКлиента.ОтменитьТранзакцию();
						Объект.Отправить(Результат);
						Возврат;
					ИначеЕсли Команда="ТИПСОЕДИНЕНИЯ" Тогда
						Результат=БДКлиента.ТипСоединения();
						МСообщить("Результат="+Результат);
						Объект.Отправить(Результат);
						Возврат;
					КонецЕсли
				Исключение
					СтрОшибки=ОписаниеОшибки();
					Сообщить(СтрОшибки);
					Объект.Отправить(СтрОшибки);
					Возврат;
				КонецПопытки
			КонецЕсли
			СтрОшибки=""+ИмяХоста+" Нераспознанная команда: "+Данные;
			Сообщить(СтрОшибки);
			Объект.Отправить(СтрОшибки);
			Возврат;
		КонецЕсли
	Иначе//Объект:Клиент
		РезультатСервера=Данные;
		ФлагОтветаСервера=1;
	КонецЕсли
КонецПроцедуры//ОбработкаДанных

//___________________________________________________________________________________________
Процедура ОтключитьКлиента(ТекНомерПодключения)
	//ТаблБДКлиентов[ТекНомерПодключения]=0;
КонецПроцедуры//ОтключитьКлиента

//___________________________________________________________________________________________
Процедура ПодключитьКлиента(ИД,ТекНомерПодключения)
	Если Число(ИД)<=0 Тогда
		 Возврат;
	КонецЕсли
	
	ТаблИДКлиентов[Число(ИД)]=ТекНомерПодключения;
	БДКлиента=СоздатьОбъект("БазаДанныхЛокально");
	БДКлиента.Соединение();
	ТаблБДКлиентов[ТекНомерПодключения]=БДКлиента;
КонецПроцедуры//ПодключитьКлиента

//___________________________________________________________________________________________
Функция ПолучитьНомерПодключения(ИД)
	ТекНомерПодключения=0;
	Если Число(ИД)>0 Тогда
		ТекНомерПодключения=Число(ТаблИДКлиентов[Число(ИД)]);
	КонецЕсли
	Возврат ТекНомерПодключения;
КонецФункции//ПолучитьНомерПодключения

//___________________________________________________________________________________________
#ЕслиНе server
Функция КомандаСерверуПриложений(Команда,Данные)Экспорт
	Мас=СоздатьОбъект("Структура");
	Мас.ИД=КлиентИД;
	Мас.Команда=Команда;
	Мас.Значение=Данные;
	КлиентБД.Отправить(Мас);
	ФлагОтветаСервера=0;
	Результат=КлиентБД.Получить();
	//Результат=Получить();
	Возврат Результат;
КонецФункции//КомандаСерверуПриложений
#КонецЕсли	


//___________________________________________________________________________________________
Процедура МСообщить(Стр)Экспорт
	 //Сообщить(""+_GetPerformanceCounter()+": "+Стр);
КонецПроцедуры//МСообщить

////___________________________________________________________________________________________
//Функция Получить()
//	Пока ФлагОтветаСервера<>1 Цикл
//		 Пауза(1);
//	КонецЦикла
//	Возврат РезультатСервера;
//КонецФункции//Получить
//
