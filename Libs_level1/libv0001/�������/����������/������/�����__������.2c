Перем ТипОбъекта;
Перем НовСпр;
Перем ПрефиксыНомеровОбъектов[];

//___________________________________________________________________________________________
Функция ТипОбъекта()Экспорт
	Возврат ТипОбъекта;
КонецФункции//ТипОбъекта

//___________________________________________________________________________________________
Функция ПрефиксыНомеровОбъектов()Экспорт
	Возврат ПрефиксыНомеровОбъектов;
КонецФункции//ПрефиксыНомеровОбъектов


//___________________________________________________________________________________________
Процедура ПриНачалеРаботыСистемы()

	//события для поддержки механизма блокировки объектов при их интерактивном редактировании
	ЗарегистрироватьСобытие("ЗаблокироватьОбъект");
	ЗарегистрироватьСобытие("РазблокироватьОбъект");
	ЗарегистрироватьСобытие("ПроверитьБлокировку");
        
	ЗарегистрироватьСобытие("ПередЗаписьюСправочника");
	ЗарегистрироватьСобытие("ПередУдалениемСправочника");
	ЗарегистрироватьСобытие("ПередОтменойУдаленияСправочника");
	
	//Читаем общие настройки объекта
	Мета=СоздатьОбъект("ФайлМетаданных");//объект для работы с файлом метаданных
	Массив=Мета.ПрочитатьДанные("НастройкиСправочников");
	Если ТипЗначения(Массив)=5 Тогда
		КонтрольУникальности=Массив.КонтрольУникальности;
		АвтоНумерация=Массив.АвтоНумерация;
		МультиКонфигурации=Число(Массив.МультиКонфигурации);
	Иначе
		КонтрольУникальности=0;
		АвтоНумерация=1;
		МультиКонфигурации=0;
	КонецЕсли;
	
	Меню=СоздатьОбъект("Меню");
	Мета=СоздатьОбъект("Метаданные").Массив.Метаданные;
	
	
	ТипОбъекта="Справочник";
	
	//читаем виды справочников
	Если РазмерСтруктуры(Мета) Тогда
		Для А=1 По РазмерСтруктуры(Мета[ТипОбъекта]) Цикл
			Вид=Мета[ТипОбъекта].ИдентификаторПоНомеру(А);
			ИдентификаторБД=ПолучитьИдентификаторБД(ТипОбъекта+"/"+Вид);
			
			ТаблицаБД=СоздатьОбъект("ТаблицаБД");
			ТаблицаБД.ДобавитьПоле("#ЭтоГруппа","Строка",1,0);
			ТаблицаБД.ДобавитьПоле("Родитель","Справочник",0,0);
			ТаблицаБД.ДобавитьПоле("Владелец","Справочник",0,0);
			ТаблицаБД.ДобавитьПоле("Код","Число",7,0);
			ТаблицаБД.ДобавитьПоле("Наименование","Строка",30,0);
			
			МетаСпр=Мета[ТипОбъекта][Вид]["Реквизиты"];
			Если РазмерСтруктуры(МетаСпр) Тогда
				Для Б=1 По РазмерСтруктуры(МетаСпр) Цикл
					Имя=МетаСпр.ИдентификаторПоНомеру(Б);
					//Уточнения типов:
					Если Врег(Имя)="РОДИТЕЛЬ" Тогда
						МетаСпр[Имя].Тип="Справочник."+Вид;
						МетаСпр[Имя].Длина=0;
						МетаСпр[Имя].Точность=0;
					ИначеЕсли Врег(Имя)="ВЛАДЕЛЕЦ" Тогда
						МетаСпр[Имя].Тип="Справочник";
						МетаСпр[Имя].Длина=0;
						МетаСпр[Имя].Точность=0;
					ИначеЕсли Врег(Имя)="КОД" Тогда
						Если ПустоеЗначение(МетаСпр[Имя].Тип)=1 Тогда
							Если ВРЕГ(МетаСпр[Имя].Тип)<>"СТРОКА" Тогда
								МетаСпр[Имя].Тип="Число";
							КонецЕсли
							МетаСпр[Имя].Длина=Макс(7,МетаСпр[Имя].Длина);
						КонецЕсли
						МетаСпр[Имя].Точность=0;
					ИначеЕсли Врег(Имя)="НАИМЕНОВАНИЕ" Тогда
						Если ПустоеЗначение(МетаСпр[Имя].Тип)=1 Тогда
							МетаСпр[Имя].Тип="Строка";
							МетаСпр[Имя].Длина=Макс(30,МетаСпр[Имя].Длина);
						КонецЕсли
						МетаСпр[Имя].Точность=0;
					КонецЕсли
					
					ИдентификаторРеквизитаБД=ПолучитьИдентификаторБД(ТипОбъекта+"/"+Вид+"/Реквизиты/"+Имя);
					ТаблицаБД.ДобавитьПоле(Имя,МетаСпр[Имя].Тип,МетаСпр[Имя].Длина,МетаСпр[Имя].Точность,ИдентификаторРеквизитаБД);
				КонецЦикла;
			КонецЕсли
			
			ТипВид=ТипОбъекта+"."+Вид;
			Если ПустоеЗначение(ИдентификаторБД)=1 Тогда
				ТипВидБД=ТипВид;
			Иначе
				ТипВидБД=ТипОбъекта+"."+ИдентификаторБД;
			КонецЕсли
			ТаблицаБД.НачальнаяИнициализация(ТипВид,"SP",1,МультиКонфигурации,ТипВидБД);
			
			//заполняем меню
			Обработчик=СоздатьОбъект(ТипОбъекта+"."+Вид);
			Меню.ДобавитьМеню(Вид,Обработчик,"ОткрытьСписок");
		КонецЦикла;
	КонецЕсли;
	
	Меню.ПоказатьМеню("Справочники");
КонецПроцедуры


Процедура ПриНачалеРаботыКонфигуратора()
	
КонецПроцедуры

//Процедура ОткрытьНовый(Вид) Экспорт
//	НовСпр=СоздатьОбъект(ТипОбъекта+"."+Вид);
//	НовСпр.Новый();
//	НовСпр.ОткрытьФорму();
//КонецПроцедуры
//



//___________________________________________________________________________________________
//Функция возвращает следующий порядковый номер
Функция глПолучитьСледующийНомер(НачНомер)Экспорт
	Если Строка(НачНомер)=Строка(Число(НачНомер)) Тогда
		Возврат 1+НачНомер;
	КонецЕсли
	
	//ищем цифровые символы (0-9)
	Для А=1 По СтрДлина(НачНомер) Цикл
		Символ=КодСимв(Сред(НачНомер,А,1));
		Если Символ>=48 И Символ<=55 Тогда//нашли число
			
			//смотрим - является ли оставшаяся часть тоже числом
			ТекПрефикс=Лев(НачНомер,А-1);
			ТекНомер=Сред(НачНомер,А);
			Если Строка(ТекНомер)=Строка(Число(ТекНомер)) Тогда
				Возврат ТекПрефикс+(1+ТекНомер);
			КонецЕсли
			
		КонецЕсли
	КонецЦикла
	
	Возврат Строка(НачНомер)+1;
КонецФункции//глПолучитьСледующийНомер
