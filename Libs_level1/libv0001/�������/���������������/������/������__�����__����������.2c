//#define _БайтКод
//Автор:  vtools, Alex_Bob 
//E-mail: info@vtools.ru, asbobylk@svsokol.lipetsk.ru
//Версия модуля: 1.20 от 20.01.2004
//Релиз платформы: 14.01.2004
//
//Изменения от 20.01.2004:
//-доработан метод ВставитьКолонку
//Изменения от 16.01.2004:
//-при переходе к обновлению формы от таймера резко возросла скорость загрузки для визуального объекта
//-доработаны методы УстановитьПараметрыКолонки(), ПолучитьПараметрыКолонки(), Фиксировать()
//Изменения от 15.01.2004:
//-Все сделано без использования структур, только массивы с целочисленными индексами;
//-Расширена проверка параметров методов;
//-Поправлены некоторые баги;

//Реализация объекта аналогичного ТаблицаЗначений в 1С
//Визуальная таблица (диалоговый элемент) будет работать в виртуальном режиме отображения данных
Перем ЕстьДиалоговыйЭлемент;
Перем Таблица;//Таблица:Grid
Перем НомерСтроки Экспорт;

//Данные
Перем МасИдКолонки[];          //идентификаторы колонок
Перем МасТипКолонки[];         //типы колонок
Перем МасДлинаКолонки[];       //длины колонок
Перем МасТочностьКолонки[];    //точность колонок
Перем МасЗаголовокКолонки[];   //заголовки колонок
Перем МасШиринаКолонки[];      //ширина колонки визуальной таблицы
Перем МасПиктограммыКолонки[]; //пиктограммы в колонке, если 1;
Перем МасФорматКолонки[];      //формат колонки;
Перем МасПоложениеКолонки[];   //положение колонки, 0-прижать влево,1-центр, 2-прижать вправо;

Перем МасДанные[];//массив строк с колонками

//Выборка
Перем ТекущаяСтрока;
Перем МаксСтрокВыборки;

Перем КС,КК; //количество строк, количество колонок
Перем КФС,КФК; //количество фикс.строк,колонок
//___________________________________________________________________________________________
//
Функция РазобратьПереченьКолонок(Колонки)
    //Разбор параметра Колонки
	Перем Сч;
    МассивКолонок=СоздатьОбъект("Массив");	
	Поз=Найти(Колонки,",");
	Сч=1;
	Пока Поз>0 Цикл
		Идент=Сред(Колонки,1,Поз-1);
		НомКол=ПолучитьНомерАтрибута(Идент);
		Если НомКол>0 Тогда
			МассивКолонок[Сч]=НомКол; 
            Сч=Сч+1;
		Иначе
		    НомКол=Число(Идент);
		    Если (НомКол>0) И (НомКол<=КК)  Тогда
	            МассивКолонок[Сч]=НомКол; 
                Сч=Сч+1;	    	 
		    КонецЕсли
		КонецЕсли;		
		Колонки=""+Сред(Колонки,Поз+1);
		Поз=Найти(Колонки,",");
	КонецЦикла;
	НомКол=ПолучитьНомерАтрибута(Колонки);
	Если НомКол>0 Тогда
		МассивКолонок[Сч]=НомКол; 
        Сч=Сч+1;
    Иначе
	    НомКол=Число(Колонки);
	    Если (НомКол>0) И (НомКол<=КК)  Тогда
	        МассивКолонок[Сч]=НомКол; 
            Сч=Сч+1;	    	 
		КонецЕсли
	КонецЕсли;		        
	Если РазмерМассива(МассивКолонок)=0 Тогда
	    //Значит в параметре Колонки пусто и будем заполнять все
	    Для Сч=1 По КК Цикл
	    	МассивКолонок[Сч]=Сч; 
	    КонецЦикла;
	КонецЕсли;
	Возврат МассивКолонок; 
КонецФункции//РазобратьПереченьКолонок
//___________________________________________________________________________________________
//
Функция ФорматнаяСтрока(НК)
	Если МасТипКолонки[НК]="Число" Тогда
		Если МасДлинаКолонки[НК]>0 Тогда
			Если МасТочностьКолонки[НК]>0 Тогда
	            Возврат "Ч"+МасДлинаКолонки[НК]+"."+МасТочностьКолонки[НК];
			Иначе
                Возврат "Ч"+МасДлинаКолонки[НК];
			КонецЕсли
    	КонецЕсли;
	КонецЕсли;
	Возврат 0;
КонецФункции//ФорматнаяСтрока
//___________________________________________________________________________________________
//
Функция ПолучитьПустоеЗначение(Тип)
    Перем Чтото;
	Если Тип="Строка" Тогда    
		Возврат "";
	ИначеЕсли Тип="Число" Тогда
	    Возврат 0;
	ИначеЕсли Тип="Дата" Тогда
	    Возврат Дата(0);
	ИначеЕсли (Тип="Неопределенный") Или
	          (ПустоеЗначение(Тип)=1) Тогда
	    Возврат Чтото;
	Иначе
	    Попытка
	        Значение=СоздатьОбъект(Тип);
	        Возврат Значение;
	    Исключение
	        Ошибка("Ошибка при создании пустого значения типа: "+Тип);
	        СтатусВозврата=0;
	    КонецПопытки                    	 
	КонецЕсли;
    СтатусВозврата=0;
КонецФункции//ПолучитьПустоеЗначение
//___________________________________________________________________________________________
//
Процедура ЗапуститьТаймер()
	УдалитьТаймер("ОбработкаТаймера");
	УстановитьТаймер("ОбработкаТаймера",1000);
КонецПроцедуры//ЗапуститьТаймер
//___________________________________________________________________________________________
//
Процедура ОбработкаТаймера()
	СинхронизироватьСтрокиКолонки();
КонецПроцедуры//ОбработкаТаймера
//******************************************************************************************
//Предопределенные процедуры и функции объекта
//******************************************************************************************
//___________________________________________________________________________________________
//Динамическое получение атрибутов
Функция ПолучитьАтрибут(Имя)Экспорт
    НомКол=ПолучитьНомерАтрибута(Имя);
    Если Число(НомерСтроки)>0 Тогда
		Если НомКол>0 Тогда
			Результат=МасДанные[НомерСтроки][НомКол]; 
//			
//			Если Результат=330 Тогда
//				Если ВРЕГ(Имя)="ЦЕНА" Тогда
//					Возврат Результат;
//				КонецЕсли
//			КонецЕсли
//
//			
			Возврат Результат;
		ИначеЕсли ВРЕГ(Имя)="НОМЕРСТРОКИ" Тогда
		    Возврат НомерСтроки;		    
		Иначе
            Ошибка("Неизвестный идентификатор колонки : "+Имя);
		КонецЕсли
	Иначе
		Ошибка("Не было выборки строк");
	КонецЕсли;
КонецФункции//ПолучитьАтрибут
//___________________________________________________________________________________________
//Динамическое задание атрибутов
Процедура УстановитьАтрибут(Имя,Значение)Экспорт
	НомСтроки=НомерСтроки;
	НомКол=ПолучитьНомерАтрибута(Имя);
    Если НомСтроки>0 Тогда	
		Если НомКол>0 Тогда
			Если МасТипКолонки[НомКол]="Число" Тогда
				МасДанные[НомерСтроки][НомКол]=Число(Значение);
            ИначеЕсли МасТипКолонки[НомКол]="Строка" Тогда
                МасДанные[НомерСтроки][НомКол]=Строка(Значение);
            ИначеЕсли МасТипКолонки[НомКол]="Дата" Тогда    
                МасДанные[НомерСтроки][НомКол]=Дата(Значение);    
			Иначе
			    МасДанные[НомерСтроки][НомКол]=Значение;    
            КонецЕсли			
		ИначеЕсли ВРЕГ(Имя)="НОМЕРСТРОКИ" Тогда
		    НомерСтроки=Число(Значение);
        Иначе
            Ошибка("Неизвестный идентификатор колонки: "+Имя);
		КонецЕсли;
	Иначе
		Ошибка("Не было выборки строк");
	КонецЕсли;
КонецПроцедуры//УстановитьАтрибут
//___________________________________________________________________________________________
//
Функция ПолучитьИмяАтрибута(Номер)Экспорт
	Если (Номер>0) И (Номер<=КК) Тогда
		Возврат МасИдКолонки[Номер]; 
	Иначе
	    Ошибка("Номер атрибута за пределами допустимого значения");
    КонецЕсли;	
КонецФункции//ПолучитьИмяАтрибута
//___________________________________________________________________________________________
//
Функция ПолучитьНомерАтрибута(Имя)Экспорт
	Перем Сч;
    Для Сч=1 По КК Цикл	 
		Если ВРег(МасИдКолонки[Сч])=ВРег(Имя) Тогда
		    Возврат Сч;
		КонецЕсли;    
	КонецЦикла;
	Возврат 0;
КонецФункции//ПолучитьНомерАтрибута
//___________________________________________________________________________________________
//
Функция ПолучитьКоличествоАтрибутов()Экспорт
	Возврат КК;
КонецФункции//ПолучитьКоличествоАтрибутов
//___________________________________________________________________________________________
//Установка внутреннего идентификатора (номера в БД) объекта 
//(или условное позиционирование объекта)
Процедура УстановитьИдентификаторОбъекта(НовИдентификатор)

КонецПроцедуры//УстановитьИдентификаторОбъекта
//___________________________________________________________________________________________
//Получение внутреннего идентификатора объекта 
Функция ПолучитьИдентификаторОбъекта()

КонецФункции//ПолучитьИдентификаторОбъекта
//___________________________________________________________________________________________
//Строковое представление объекта
Функция ПолучитьПредставлениеОбъекта()

КонецФункции//ПолучитьПредставлениеОбъекта
//___________________________________________________________________________________________
//Строковое значение типа объекта
Функция ПолучитьТипОбъекта()
	 Возврат "ТаблицаЗначений";
КонецФункции//ПолучитьТипОбъекта
//___________________________________________________________________________________________
//Конструктор (вызывается при инициализации объекта)
//ВидОбъекта - вид объекта, задающийся строкой следуемой за символом "."
//Элемент - произвольный параметр (для визуальных элементов - объект базового класса)
Функция Конструктор(ВидОбъекта,Элемент)
	НомерСтроки=0;
	КС=0;
	КК=0;
	Если ТипЗначения(Элемент)=0 Тогда
		ЕстьДиалоговыйЭлемент=0;
	Иначе
		ЕстьДиалоговыйЭлемент=1;
		Таблица=Элемент;
		Таблица.ВиртуальныйРежим(1);
	    ТекущаяСтрока=1;
	    МаксСтрокВыборки=20;
	    КФС=Таблица.КоличествоФиксСтрок();
	    КФК=Таблица.КоличествоФиксКолонок();
	    //СинхронизироватьСтрокиКолонки();
	    //Таблица.КоличествоФиксСтрок(КФС);
	    ЗапуститьТаймер();
	КонецЕсли;
КонецФункции//Конструктор
//___________________________________________________________________________________________
//Деструктор (вызывается при удалении объекта)
Процедура Деструктор()

КонецПроцедуры//Деструктор

//___________________________________________________________________________________________
//Обрабочик событий визуального объекта
//Возвращает:
//0 - событие не обработано (передается в форму для дальнейшей обработки)
//1 - событие обработано (далее в форму не передается)
//ИмяСобытия - имя события как оно задано в окне свойств конфигуратора
Функция ОбработкаСобытия(ИмяСобытия,НомСтр,НомКол,СтрТекст,НомКартинки,НомФормат,НомЦветТекста,НомЦветФона) Экспорт
	Если ИмяСобытия="Виртуальный режим" Тогда
		ОбработатьЯчейку(НомСтр,НомКол,СтрТекст,НомКартинки,НомФормат,НомЦветТекста,НомЦветФона);
		ТекущаяСтрока=Число(НомСтр);
	ИначеЕсли ИмяСобытия="Начало редактирования" Тогда
	ИначеЕсли ИмяСобытия="Окончание редактирования" Тогда
		Если НЕ СостояниеКлавиши("ESCAPE") Тогда
			МасДанные[Таблица.ТекущаяСтрока()][Таблица.ТекущаяКолонка()+1]=Таблица.РедактируемоеЗначение();
		КонецЕсли
	КонецЕсли
	//Сообщить(ИмяСобытия);
	//Сообщить(ИмяСобытия);
	Возврат 0;//0 - передаем управление пользовательскому обработчику
КонецФункции//ОбработкаСобытия
//___________________________________________________________________________________________
//Возвращает текущий вид объекта (вызывается при выгрузке значения в строку)
Функция Вид() Экспорт

	Возврат "";
КонецФункции//Вид

//#Задать НайтиНомерКолонки 
//___________________________________________________________________________________________
//Процедура обработки виртуального режима таблицы
Процедура ОбработатьЯчейку(НомСтр,НомКол,СтрТекст,НомКартинки,НомФормат,НомЦветТекста,НомЦветФона)
	НомерКолонки=НомКол+1;
		
	Имя=МасИдКолонки[НомерКолонки];
	Если НомСтр=0 Тогда	
		СтрТекст=МасЗаголовокКолонки[НомерКолонки];
		Если Сокрлп(СтрТекст)="" Тогда
			 СтрТекст=Имя;
		КонецЕсли
	Иначе
	    Если МасПиктограммыКолонки[НомерКолонки]=1 Тогда
		    НомКартинки=МасДанные[НомСтр][НомерКолонки];
		    СтрТекст="";
		Иначе
            СтрТекст=МасДанные[НомСтр][НомерКолонки];
            НомФормат=МасПоложениеКолонки[НомерКолонки];
            Если ПустоеЗначение(МасФорматКолонки[НомерКолонки])=0 Тогда
            	СтрТекст=Формат(СтрТекст,МасФорматКолонки[НомерКолонки]);
            Иначе
	            Если МасТипКолонки[НомерКолонки]="Число" Тогда
	            	Если ТипЗначения(ФорматнаяСтрока(НомерКолонки))=2 Тогда//Строка
	            		СтрТекст=Формат(СтрТекст,ФорматнаяСтрока(НомерКолонки));  
	            	КонецЕсли;
	            	НомФормат=2; 
	            КонецЕсли;
            КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры//ОбработатьЯчейку

//******************************************************************************************
//Методы объекта доступные через точку (процедуры и функции с признаком Экспорт)
//******************************************************************************************
///////////////////////////////////////////////////////////////////////
//******************************************************************************************
//___________________________________________________________________________________________
//Устанавливает/возвращает количество колонок
Функция КоличествоКолонок(НовЧислоКол="") Экспорт
	
	Перем Мас1[];
    ЧислоКол=РазмерМассива(МасИдКолонки);		
	Если ТипЗначения(НовЧислоКол)=1 Тогда
		//удаляем старые колонки
		Если ЧислоКол>НовЧислоКол Тогда
			Для А=1 По НовЧислоКол Цикл
				Мас1[1][А]=МасИдКолонки[А];
				Мас1[2][А]=МасТипКолонки[А];
				Мас1[3][А]=МасДлинаКолонки[А];
				Мас1[4][А]=МасТочностьКолонки[А];
				Мас1[5][А]=МасЗаголовокКолонки[А];
				Мас1[6][А]=МасШиринаКолонки[А];
				Мас1[7][А]=МасПиктограммыКолонки[А];
				Мас1[8][А]=МасФорматКолонки[А];
				Мас1[9][А]=МасПоложениеКолонки[А];
			КонецЦикла;	
            МасИдКолонки.Загрузить(Мас1[1]);
            МасТипКолонки.Загрузить(Мас1[2]);
            МасДлинаКолонки.Загрузить(Мас1[3]);
            МасТочностьКолонки.Загрузить(Мас1[4]);
            МасЗаголовокКолонки.Загрузить(Мас1[5]);
            МасШиринаКолонки.Загрузить(Мас1[6]);
            МасПиктограммыКолонки.Загрузить(Мас1[7]);
            МасФорматКолонки.Загрузить(Мас1[8]);
            МасПоложениеКолонки.Загрузить(Мас1[9]);
		КонецЕсли;
				
		//задаем новое количество колонок таблицы
		Для А=ЧислоКол+1 По НовЧислоКол Цикл
			Имя="_"+А;
			НоваяКолонка(Имя);
		КонецЦикла
		СинхронизироватьСтрокиКолонки();
	КонецЕсли
	КК=Число(ЧислоКол);
 	Возврат ЧислоКол;
КонецФункции//КоличествоКолонок
//___________________________________________________________________________________________
//Добавить в конец таблицы значений новую колонку. Возвращает номер новой колонки
Функция НоваяКолонка(Идентификатор,Тип="",Длина="",Точность="",Заголовок="",Знач Ширина="",Фмт="",Положение=0) Экспорт
	Если Число(Ширина)=0 Тогда
		 Ширина=15;
	КонецЕсли
	Если ВРег(Идентификатор)="НОМЕРСТРОКИ" Тогда
	    Ошибка(Идентификатор+"-неразрешенный идентификатор колонки"); 
	КонецЕсли;
	
	Если ПолучитьНомерАтрибута(Идентификатор)>0 Тогда
		Ошибка(Идентификатор+"-такой идентификатор колонки уже есть"); 
	КонецЕсли;
	НомКол=1+КК;
	МасТипКолонки[НомКол]=Тип;
	МасИдКолонки[НомКол]=Идентификатор;
	МасДлинаКолонки[НомКол]=Длина;
	МасТочностьКолонки[НомКол]=Точность;
	МасЗаголовокКолонки[НомКол]=Заголовок;
	МасПиктограммыКолонки[НомКол]=0;
	МасШиринаКолонки[НомКол]=Ширина;
	МасФорматКолонки[НомКол]=Фмт;
	МасПоложениеКолонки[НомКол]=Положение;
		
	Если КС>0 Тогда	
		Для Сч=1 По КС Цикл
			МасДанные[Сч][НомКол]=ПолучитьПустоеЗначение(Тип); 
		КонецЦикла
	КонецЕсли
	КК=КК+1;

	//СинхронизироватьСтрокиКолонки();
	Если ЕстьДиалоговыйЭлемент Тогда
        //Таблица:Grid
        Таблица.КоличествоКолонок(КК);
	    Таблица.ШиринаКолонки(Число(КК-1),5*Ширина); 
	    Таблица.ИдентификаторКолонки(КК-1,Идентификатор);
	    ОбработкаСобытия("Виртуальный режим",0,Число(КК-1),0,0,0,0,0);
	КонецЕсли;
КонецФункции//НоваяКолонка
//___________________________________________________________________________________________
//ВставитьКолонку
Процедура ВставитьКолонку(Идентификатор,НомерКолонки,Тип="",Длина="",Точность="",Заголовок="",Знач Ширина="",Фмт="",Положение=0) Экспорт
	Если Число(Ширина)=0 Тогда
		 Ширина=15;
	КонецЕсли
	Если ВРег(Идентификатор)="НОМЕРСТРОКИ" Тогда
	    Ошибка(Идентификатор+"-неразрешенный идентификатор колонки"); 
	КонецЕсли;
	
	Если ПолучитьНомерАтрибута(Идентификатор)>0 Тогда
		Ошибка(Идентификатор+"-такой идентификатор колонки уже есть"); 
	КонецЕсли;
	НомКол=Число(НомерКолонки);
	Если (НомКол>0) И (НомКол<=КК) Тогда
	    Сч=КК;
	    Пока Сч>=НомКол Цикл
	    	МасТипКолонки[Сч+1]=МасТипКолонки[Сч];
			МасИдКолонки[Сч+1]=МасИдКолонки[Сч];
			МасДлинаКолонки[Сч+1]=МасДлинаКолонки[Сч];
			МасТочностьКолонки[Сч+1]=МасТочностьКолонки[Сч];				
			МасЗаголовокКолонки[Сч+1]=МасЗаголовокКолонки[Сч];
			МасПиктограммыКолонки[Сч+1]=МасПиктограммыКолонки[Сч];
			МасШиринаКолонки[Сч+1]=МасШиринаКолонки[Сч];
			МасФорматКолонки[Сч+1]=МасФорматКолонки[Сч];
			МасПоложениеКолонки[Сч+1]=МасПоложениеКолонки[Сч];
	        Сч=Сч-1; 
	    КонецЦикла;
	    
	Иначе	 
	   НомКол=КК+1;
	КонецЕсли
	
	МасТипКолонки[НомКол]=Тип;
	МасИдКолонки[НомКол]=Идентификатор;
	МасДлинаКолонки[НомКол]=Длина;
	МасТочностьКолонки[НомКол]=Точность;
	МасЗаголовокКолонки[НомКол]=Заголовок;
	МасПиктограммыКолонки[НомКол]=0;
	МасШиринаКолонки[НомКол]=Ширина;
	МасФорматКолонки[НомКол]=Фмт;
	МасПоложениеКолонки[НомКол]=Положение;
		
	Если КС>0 Тогда	
		Для Сч=1 По КС Цикл
            Сч1=КК;
            Пока Сч1>=НомКол Цикл
                МасДанные[Сч][Сч1+1]=МасДанные[Сч][Сч1]; 
 	            Сч1=Сч1-1; 
            КонецЦикла;
        	МасДанные[Сч][НомКол]=ПолучитьПустоеЗначение(Тип);
		КонецЦикла;        
	КонецЕсли;
	КК=КК+1;

	СинхронизироватьСтрокиКолонки();
	Если ЕстьДиалоговыйЭлемент Тогда
        //Таблица:Grid
	    Таблица.ШиринаКолонки(Число(НомКол-1),5*Ширина); 
	    ОбработкаСобытия("Виртуальный режим",0,Число(НомКол-1),0,0,0,0,0);
	КонецЕсли;
	
КонецПроцедуры//ВставитьКолонку
//___________________________________________________________________________________________
//УдалитьКолонку
Процедура УдалитьКолонку(Колонка) Экспорт
	Если ТипЗначенияСтр(Колонка)="Число" Тогда
		НомКол=Колонка;
	ИначеЕсли ТипЗначенияСтр(Колонка)="Строка" Тогда
	    НомКол=ПолучитьНомерАтрибута(Колонка); 	 
	КонецЕсли;
	Если НомКол=0 Тогда
	    СтатусВозврата=0;
	КонецЕсли
	
	МасДанные1=СоздатьОбъект("Массив");
	Мас1=СоздатьОбъект("Массив");
	Сч1=1;
	Для Сч=1 По КК Цикл
	    Если Сч=НомКол Тогда
            Продолжить
        Иначе    	    
		    Мас1[1][Сч1]=МасИдКолонки[Сч];
		    Мас1[2][Сч1]=МасТипКолонки[Сч];
		    Мас1[3][Сч1]=МасДлинаКолонки[Сч];
		    Мас1[4][Сч1]=МасТочностьКолонки[Сч];
		    Мас1[5][Сч1]=МасЗаголовокКолонки[Сч];
		    Мас1[6][Сч1]=МасШиринаКолонки[Сч];
		    Мас1[7][Сч1]=МасПиктограммыКолонки[Сч];
		    Мас1[8][Сч1]=МасФорматКолонки[Сч];
		    Мас1[9][Сч1]=МасПоложениеКолонки[Сч];
		    Сч1=Сч1+1;
		КонецЕсли;     
	КонецЦикла
	Если КС>0 Тогда
		Для Сч1=1 По КС Цикл
		    Сч2=1;
			Для Сч3=1 По КК Цикл
				Если Сч3=НомКол Тогда
					Продолжить
				Иначе    	    
					МасДанные1[Сч1][Сч2]=МасДанные[Сч1][Сч3];
    			КонецЕсли;
                Сч2=Сч2+1;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	МасИдКолонки.Загрузить(Мас1[1]);
	МасТипКолонки.Загрузить(Мас1[2]);
	МасДлинаКолонки.Загрузить(Мас1[3]);
	МасТочностьКолонки.Загрузить(Мас1[4]);
	МасЗаголовокКолонки.Загрузить(Мас1[5]);
	МасШиринаКолонки.Загрузить(Мас1[6]);
	МасПиктограммыКолонки.Загрузить(Мас1[7]);
	МасФорматКолонки.Загрузить(Мас1[8]);
	МасПоложениеКолонки.Загрузить(Мас1[9]);
	МасДанные.Загрузить(МасДанные1);
	НомерСтроки=0;
	КК=КК-1;
КонецПроцедуры//УдалитьКолонку
//___________________________________________________________________________________________
//Установить параметры колонки
Процедура УстановитьПараметрыКолонки(Колонка,Тип="",Длина="",Точность="",Заголовок="",Знач Ширина="",Фмт="",Положение=0) Экспорт
	Если Число(Ширина)=0 Тогда
		 Ширина=15;
	КонецЕсли;
	Если ТипЗначенияСтр(Колонка)="Число" Тогда
	    НомКол=Колонка;
	ИначеЕсли ТипЗначенияСтр(Колонка)="Строка" Тогда
	    НомКол=ПолучитьНомерАтрибута(Колонка);
	Иначе
        СтатусВозврата=0;
    КонецЕсли;    
    Если (НомКол>0) И (НомКол<=КК) Тогда
    	Если ТипЗначенияСтр(Тип)="Строка" Тогда
    		МасТипКолонки[НомКол]=Тип; 
    	КонецЕсли;
    	Если ТипЗначенияСтр(Длина)="Число" Тогда
    		МасДлинаКолонки[НомКол]=Длина;
    	КонецЕсли;
    	Если ТипЗначенияСтр(Точность)="Число" Тогда
    		МасТочностьКолонки[НомКол]=Точность;
    	КонецЕсли;
    	Если ТипЗначенияСтр(Заголовок)="Строка" Тогда
    		МасЗаголовокКолонки[НомКол]=Заголовок; 
    	КонецЕсли;
    	Если ТипЗначенияСтр(Ширина)="Число" Тогда
    		МасШиринаКолонки[НомКол]=Ширина;
    	КонецЕсли;
    	Если ТипЗначенияСтр(Фмт)="Строка" Тогда
    		МасФорматКолонки[НомКол]=Фмт; 
    	КонецЕсли;
    	Если ТипЗначенияСтр(Положение)="Число" Тогда
    		МасПоложениеКолонки[НомКол]=Положение;
    	КонецЕсли;
    КонецЕсли;
    	
	Если ЕстьДиалоговыйЭлемент Тогда
        //Таблица:Grid
	    Таблица.ШиринаКолонки(Число(НомКол-1),5*Ширина); 
	    ОбработкаСобытия("Виртуальный режим",0,Число(НомКол-1),0,0,0,0,0);
	КонецЕсли;
КонецПроцедуры//УстановитьПараметрыКолонки
//___________________________________________________________________________________________
//Получить параметры колонки
Функция ПолучитьПараметрыКолонки(Колонка,Тип,Длина,Точность,Заголовок,Ширина,Фмт,Положение) Экспорт
	
	Если ТипЗначенияСтр(Колонка)="Число" Тогда
		ИмяКолонки=МасИдКолонки[Колонка];
		НомКол=Колонка;
		Тип=МасТипКолонки[Колонка];
		Длина=МасДлинаКолонки[Колонка];
		Точность=МасТочностьКолонки[Колонка];
		Заголовок=МасЗаголовокКолонки[Колонка];
		Ширина=МасШиринаКолонки[Колонка];
		Фмт=МасФорматКолонки[Колонка];
		Положение=МасПоложениеКолонки[Колонка];
		Если СтрДлина(ИмяКолонки)>0 Тогда
			Возврат ИмяКолонки
		Иначе
		    Возврат 0;	 
		КонецЕсли
    ИначеЕсли ТипЗначенияСтр(Колонка)="Строка" Тогда
        НомКол=ПолучитьНомерАтрибута(Колонка);
        Тип=МасТипКолонки[НомКол];
        Длина=МасДлинаКолонки[НомКол];
		Точность=МасТочностьКолонки[НомКол];
		Заголовок=МасЗаголовокКолонки[НомКол];
		Ширина=МасШиринаКолонки[НомКол];
		Фмт=МасФорматКолонки[НомКол];
		Положение=МасПоложениеКолонки[НомКол];
	    Возврат НомКол;
	КонецЕсли;
	Возврат 0 
КонецФункции//ПолучитьПараметрыКолонки
//___________________________________________________________________________________________
//Устанавливает/возвращает количество строк в таблице значений
Функция КоличествоСтрок(НовЧислоСтрок="") Экспорт
	Число Сч,Сч1,Сч2;
    КС=РазмерМассива(МасДанные);	
	ЧислоСтрок=КС;
	Если ТипЗначения(НовЧислоСтрок)=1 Тогда
		МасДанные1=СоздатьОбъект("Массив");
		//удаляем старые строки
		Если ЧислоСтрок>НовЧислоСтрок Тогда
			Для Сч=1 По НовЧислоСтрок Цикл
			    МасДанные1[Сч].Загрузить(МасДанные[Сч]);
			КонецЦикла;
			МасДанные.Загрузить(МасДанные1);
		КонецЕсли;

		//подготавливаем пустую структуру для быстрого заполнения данными		
		ПустаяСтруктура=СоздатьОбъект("Структура");
		Для Сч2=1 По КК Цикл
			ПустаяСтруктура[Сч2]=ПолучитьПустоеЗначение(МасТипКолонки[Сч2]);							
		КонецЦикла;
		
		//задаем новый размер таблицы
		Для Сч1=1+ЧислоСтрок По НовЧислоСтрок Цикл
			Для Сч2=1 По КК Цикл
				МасДанные[Сч1]=СоздатьОбъект("Массив");
				МасДанные[Сч1].Загрузить(ПустаяСтруктура);
			КонецЦикла;
		КонецЦикла;
	    КС=Число(РазмерМассива(МасДанные));	
		СинхронизироватьСтрокиКолонки();
	КонецЕсли
	Возврат ЧислоСтрок;
КонецФункции//КоличествоСтрок
//___________________________________________________________________________________________
//Новая строка
Процедура НоваяСтрока() Экспорт
	Число Сч;
    КС=КС+1;	
	Для Сч=1 По КК Цикл
	    МасДанные[КС][Сч]=ПолучитьПустоеЗначение(МасТипКолонки[Сч]); 
	КонецЦикла;
		
	НомерСтроки=КС;
	//СинхронизироватьСтрокиКолонки();	 
КонецПроцедуры//НоваяСтрока
//___________________________________________________________________________________________
//
Процедура УдалитьСтроку(НомСтроки) Экспорт
	Перем Сч;
	Если ТипЗначенияСтр(НомСтроки)="Число" Тогда
		Если (НомСтроки>0) И (НомСтроки<=КС) Тогда
			Для Сч=1 По КС Цикл
			    МасДанные1[Сч]=СоздатьОбъект("Массив");
				Если Сч=НомСтроки Тогда
				    Продолжить 
				ИначеЕсли Сч<НомСтроки Тогда
					МасДанные1[Сч].Загрузить(МасДанные[Сч]);
				ИначеЕсли Сч>НомСтроки Тогда
					МасДанные1[Сч-1].Загрузить(МасДанные[Сч]);
				КонецЕсли;
			КонецЦикла;
			МасДанные.Загрузить(МасДанные1);
		КонецЕсли;
        КС=КС-1;
	    НомерСтроки=0;
	    СинхронизироватьСтрокиКолонки();
	КонецЕсли;

КонецПроцедуры//УдалитьСтроку
//___________________________________________________________________________________________
//Удаляет все строки, сохраняя структуру колонок
Процедура УдалитьСтроки() Экспорт
    МасДанные.УдалитьВсе();
    КС=0;
    СинхронизироватьСтрокиКолонки();
КонецПроцедуры//УдалитьСтроки
//___________________________________________________________________________________________
//Открывает выборку строк таблицы значений. Дальнейшая выборка осуществляется при помощи метода ПолучитьСтроку
Процедура ВыбратьСтроки() Экспорт
    НомерСтроки=0;
КонецПроцедуры//ВыбратьСтроки
//___________________________________________________________________________________________
//Получить из выборки следующую строку таблицы значений в последовательности выборки, открытой перед этим при помощи метода ВыбратьСтроки.
//Возвращает: 1 - если очередная строка выбрана, 0 - если не выбрана.
Функция ПолучитьСтроку() Экспорт
    НомерСтроки=НомерСтроки+1;
    НомСтроки=НомерСтроки;
    КолСтрок=КС;
 	Если НомСтроки>КолСтрок Тогда    
	    Возврат 0;
	Иначе
	    Возврат 1;     
    КонецЕсли
КонецФункции//ПолучитьСтроку
//___________________________________________________________________________________________
//
Функция ПолучитьСтрокуПоНомеру(НомСтроки) Экспорт
	Если ЕстьДиалоговыйЭлемент Тогда
		Таблица.ПолучитьСтрокуПоНомеру(НомСтроки);
	КонецЕсли
    Если НомСтроки>КС Тогда
	    Возврат 0;
	Иначе
	    НомерСтроки=НомСтроки;
	    Возврат 1;     
    КонецЕсли
КонецФункции//ПолучитьСтрокуПоНомеру
//___________________________________________________________________________________________
//
Функция СдвинутьСтроку(КолСтрок,НомСтроки) Экспорт
    Перем МасДанные1[];
    Если КолСтрок<0 Тогда    
	    Если НомСтроки+КолСтрок<1 Тогда
	        НовыйНомСтроки=1;
		Иначе     
		    НовыйНомСтроки=НомСтроки+КолСтрок;
	    КонецЕсли
	Иначе
	    Если НомСтроки+КолСтрок>КС Тогда
	        НовыйНомСтроки=КС;
		Иначе     
		    НовыйНомСтроки=НомСтроки+КолСтрок;
	    КонецЕсли     
    КонецЕсли
    Для Сч=1 По КС Цикл
        МасДанные1[Сч]=СоздатьОбъект("Массив");
	    Если КолСтрок<0 Тогда
		    Если Сч<НовыйНомСтроки Тогда
			    МасДанные1[Сч].Загрузить(МасДанные[Сч]); 
			ИначеЕсли Сч=НовыйНомСтроки Тогда
			    МасДанные1[Сч].Загрузить(МасДанные[НомСтроки]);
			ИначеЕсли (Сч>НовыйНомСтроки) И (Сч<=НомСтроки) Тогда
			    МасДанные1[Сч].Загрузить(МасДанные[Сч-1]);
			Иначе        
			    МасДанные1[Сч].Загрузить(МасДанные[Сч]);
		    КонецЕсли
		Иначе
		    Если Сч<НомСтроки Тогда
			    МасДанные1[Сч].Загрузить(МасДанные[Сч]); 
			ИначеЕсли Сч=НовыйНомСтроки Тогда
			    МасДанные1[Сч].Загрузить(МасДанные[НомСтроки]);
			ИначеЕсли (Сч>=НомСтроки) И (Сч<НовыйНомСтроки) Тогда
			    МасДанные1[Сч].Загрузить(МасДанные[Сч-1]);
			Иначе        
			    МасДанные1[Сч].Загрузить(МасДанные[Сч]);
		    КонецЕсли
        КонецЕсли;
	    	    
    КонецЦикла
    МасДанные.Загрузить(МасДанные1);
КонецФункции//СдвинутьСтроку
//___________________________________________________________________________________________
// 
Функция НайтиЗначение(Значение,Число НомСтроки,Число Колонка) Экспорт
	Число Сч1;
	Число Сч2;
    Для Сч1=1 По КС Цикл	
		Для Сч2=1 По КК Цикл
			Если МасДанные[Сч1][Сч2]=Значение Тогда
				НомСтроки=Сч1;
				Колонка=Сч2;
				ТекущаяСтрока=НомСтроки;
				Возврат 1; 
			КонецЕсли
		КонецЦикла
	КонецЦикла
	Возврат 0;
КонецФункции//НайтиЗначение
//___________________________________________________________________________________________
//
Процедура Сортировать(Строка Колонки) Экспорт
	Число Сч1,Сч2,Сч;
	МассивКолонок=РазобратьПереченьКолонок(Колонки);
	РазмерМассиваКолонок=РазмерМассива(МассивКолонок);
	Сп=СоздатьОбъект("СписокЗначений");
	Для Сч1=1 По КС Цикл	
		Стр="";
		Для Сч2=1 По РазмерМассиваКолонок Цикл
			Значение=МасДанные[Сч1][МассивКолонок[Сч2]];
			Если МасТипКолонки[МассивКолонок[Сч2]]="Строка" Тогда
                стрКолонки=Значение;
			ИначеЕсли МасТипКолонки[МассивКолонок[Сч2]]="Число" Тогда					
				стрКолонки=Формат(Значение,ФорматнаяСтрока(МассивКолонок[Сч2]));
            ИначеЕсли МасТипКолонки[МассивКолонок[Сч2]]="Дата" Тогда					
                стрКолонки=Формат(Значение,"ДГГГГММДД");
            Иначе
                стрКолонки=Строка(Значение);
			КонецЕсли
			
			Стр=Стр+стрКолонки; 
 		КонецЦикла; 
 		Сп.ДобавитьЗначение(Сч1,Стр);
 	КонецЦикла
	Сп.СортироватьПоПредставлению();
	Для Сч=1 По КС Цикл
	    МасДанные2[Сч]=СоздатьОбъект("Массив");
	    МасДанные2[Сч].Загрузить(МасДанные[Сп.ПолучитьЗначение(Сч)]); 
	КонецЦикла
	МасДанные.Загрузить(МасДанные2);
КонецПроцедуры//Сортировать
//___________________________________________________________________________________________
//Очистить таблицу значений и удалить колонки
Процедура Очистить()Экспорт
	МасИдКолонки.УдалитьВсе();          //идентификаторы колонок
    МасТипКолонки.УдалитьВсе();         //типы колонок
    МасДлинаКолонки.УдалитьВсе();       //длины колонок
    МасТочностьКолонки.УдалитьВсе();    //точность колонок
    МасЗаголовокКолонки.УдалитьВсе();   //заголовки колонок
    МасШиринаКолонки.УдалитьВсе();      //ширина колонки визуальной таблицы
    МасПиктограммыКолонки.УдалитьВсе(); //пиктограммы в колонке, если 1;
    МасФорматКолонки.УдалитьВсе(); 
    МасПоложениеКолонки.УдалитьВсе();   
	МасДанные.УдалитьВсе();
    НомерСтроки=0;
	КК=0;
	КС=0;
	СинхронизироватьСтрокиКолонки();
КонецПроцедуры//Очистить
//___________________________________________________________________________________________
//
Функция Итог(Колонка) Экспорт
	Если ТипЗначения(Колонка)=1 Тогда//Число
	    НомКол=Колонка;
	Иначе
	    НомКол=ПолучитьНомерАтрибута(Колонка);
	КонецЕсли;
	Если ПолучитьНомерАтрибута(МасИдКолонки[НомКол])=0 Тогда
	    Возврат 0; 
	КонецЕсли 
	Итог=0;
	Для Сч=1 По КС Цикл
		Итог=Итог+Число(МасДанные[Сч][НомКол]); 
	КонецЦикла
	Возврат Итог;
КонецФункции//Итог
//___________________________________________________________________________________________
//
Процедура Заполнить(Значение,НачСтрока=0,КонСтрока,Колонки) Экспорт
	Если Число(НачСтрока)<1 Тогда
		НачСтрока=1;
	ИначеЕсли Число(НачСтрока)>КС Тогда
	    СтатусВозврата=0;	 
	КонецЕсли;
	Если Число(КонСтрока)=0 Тогда
	    КонСтрока=КС;
	КонецЕсли
	Если КонСтрока<=НачСтрока Тогда
		КонСтрока=НачСтрока;
	ИначеЕсли Число(КонСтрока)>КС Тогда
	    КонСтрока=КС;	 
	КонецЕсли
	МассивКолонок=РазобратьПереченьКолонок(Колонки);
	Для Сч1=НачСтрока По КонСтрока Цикл
		Для Сч2=1 По Разм(МассивКолонок) Цикл
			МасДанные[Сч1][МассивКолонок[Сч2]]=Значение; 
		КонецЦикла
	КонецЦикла
	
КонецПроцедуры//Заполнить
//___________________________________________________________________________________________
//
Процедура СинхронизироватьСтрокиКолонки()
	//Таблица:Grid
	Если ЕстьДиалоговыйЭлемент Тогда
		Если КС<0 Тогда
			 Ошибка("Количество строк должно быть >=0");
		КонецЕсли
		
		Таблица.КоличествоСтрок(1+КС);
		Таблица.КоличествоКолонок(КК);
	КонецЕсли;
КонецПроцедуры//СинхронизироватьСтрокиКолонки
//___________________________________________________________________________________________
//
Процедура ПроверитьПравильностьКолонкиСтроки(Стр,Кол)
	Если ТипЗначения(Кол)=1 Тогда
		Если Кол<1 ИЛИ Кол>КК Тогда
			 Ошибка("Неправильно задан номер колонки = "+Кол);
		КонецЕсли;
	КонецЕсли;

	Если Стр<1 ИЛИ Стр>КС Тогда
		 Ошибка("Неправильно задан номер строки = "+Стр);
	КонецЕсли;
КонецПроцедуры//ПроверитьПравильностьКолонкиСтроки
//___________________________________________________________________________________________
//Установить значение ячейки таблицы значений.
Процедура УстановитьЗначение(Стр,Кол,Значение) Экспорт
	Если ТипЗначения(Кол)=1 Тогда//Число
		НомКол=Кол;	
	ИначеЕсли ТипЗначения(Кол)=2 Тогда//Строка
		НомКол=ПолучитьНомерАтрибута(Кол);
    КонецЕсли	
		
	ПроверитьПравильностьКолонкиСтроки(Стр,НомКол);
	МасДанные[Стр][НомКол]=Значение;
КонецПроцедуры//УстановитьЗначение

//___________________________________________________________________________________________
//Получить значение заданной ячейки таблицы значений. Возвращает значение заданной ячейки.
Функция ПолучитьЗначение(Стр,Знач Кол)Экспорт
	Если ТипЗначения(Кол)=1 Тогда//Число
		НомКол=Кол;	
	ИначеЕсли ТипЗначения(Кол)=2 Тогда//Строка
		НомКол=ПолучитьНомерАтрибута(Кол);
    КонецЕсли;
	
	ПроверитьПравильностьКолонкиСтроки(Стр,НомКол);
	Возврат МасДанные[Стр][НомКол];
КонецФункции//ПолучитьЗначение
//___________________________________________________________________________________________
//
Функция ТекущаяСтрока(НовСтр="") Экспорт
	Если ЕстьДиалоговыйЭлемент Тогда
		Если ТипЗначения(НовСтр)=1 Тогда//Число
		     ТекущаяСтрока=Число(НовСтр);
			 Возврат Таблица.ТекущаяСтрока(НовСтр);
		КонецЕсли
		Ном=Таблица.ТекущаяСтрока();
		Возврат ?(Ном<=0,0,Ном);
	Иначе
		Возврат 0;
	КонецЕсли
КонецФункции//ТекущаяСтрока
//___________________________________________________________________________________________
//
Функция ТекущаяКолонка(Знач НовКол="",НомКол="") Экспорт
	Если ЕстьДиалоговыйЭлемент Тогда
		Если Число(НовКол)>0 Тогда
			Таблица.ТекущаяКолонка(НовКол-1);
		Иначе
			НомКол=Таблица.ТекущаяКолонка()+1;
			Имя=МасИдКолонки[НомКол];
			Возврат Имя;
		КонецЕсли;
	КонецЕсли
	Возврат "";
КонецФункции//ТекущаяКолонка

//___________________________________________________________________________________________
//
Процедура Свернуть(Колонки,СумКолонки) Экспорт
    Число Сч,Сч1,Сч2,КолСвернутых; //Счетчики
    Перем МасТекСтроки[];    
	Перем МасДанные1;		
	МКолонки=РазобратьПереченьКолонок(Колонки);	
	МСумКолонки=РазобратьПереченьКолонок(СумКолонки);
	Сортировать(Колонки);
	МасТекСтроки.Загрузить(МасДанные[1]); 
	РазмерМКолонки=РазмерМассива(МКолонки);
    РазмерМСумКолонки=РазмерМассива(МСумКолонки);	
	Для Сч=1 По РазмерМКолонки Цикл
		МасДанные1[1][МКолонки[Сч]]=МасДанные[1][МКолонки[Сч]]; 
	КонецЦикла
	Для Сч=1 По РазмерМСумКолонки Цикл
		МасДанные1[1][МСумКолонки[Сч]]=0; 
	КонецЦикла
	КолСвернутых=1;
	Для Сч1=1 По КС Цикл
	    ФлагГруппировки=1;
		Для Сч2=1 По РазмерМКолонки Цикл
			Если МасТекСтроки[МКолонки[Сч2]]=МасДанные[Сч1][МКолонки[Сч2]] Тогда
            Иначе
                ФлагГруппировки=0;
                Прервать;
            КонецЕсли;   
 		КонецЦикла
 		Если ФлагГруппировки=1 Тогда
 		    Для Сч2=1 По РазмерМСумКолонки Цикл
				МасДанные1[КолСвернутых][МСумКолонки[Сч2]]=МасДанные1[КолСвернутых][МСумКолонки[Сч2]]+МасДанные[Сч1][МСумКолонки[Сч2]]; 
			КонецЦикла;
 	    Иначе
 	        МасТекСтроки.Загрузить(МасДанные[Сч1]); 
 	        КолСвернутых=КолСвернутых+1;
 	        Для Сч2=1 По РазмерМКолонки Цикл
				МасДанные1[КолСвернутых][МКолонки[Сч2]]=МасДанные[Сч1][МКолонки[Сч2]]; 
			КонецЦикла;
 	        Для Сч2=1 По РазмерМСумКолонки Цикл
				МасДанные1[КолСвернутых][МСумКолонки[Сч2]]=Число(МасДанные[Сч1][МСумКолонки[Сч2]]); 
			КонецЦикла;
		КонецЕсли
 	КонецЦикла;
 	
    Мас1=СоздатьОбъект("Массив"); 	
 	Для Сч1=1 По РазмерМКолонки Цикл
 	    Мас1[1][Сч1]=МасИдКолонки[МКолонки[Сч1]];
		Мас1[2][Сч1]=МасТипКолонки[МКолонки[Сч1]];
		Мас1[3][Сч1]=МасДлинаКолонки[МКолонки[Сч1]];
		Мас1[4][Сч1]=МасТочностьКолонки[МКолонки[Сч1]];
		Мас1[5][Сч1]=МасЗаголовокКолонки[МКолонки[Сч1]];
		Мас1[6][Сч1]=МасШиринаКолонки[МКолонки[Сч1]];
		Мас1[7][Сч1]=МасПиктограммыКолонки[МКолонки[Сч1]];
		Мас1[8][Сч1]=МасФорматКолонки[МКолонки[Сч1]];
		Мас1[9][Сч1]=МасПоложениеКолонки[МКолонки[Сч1]];
	КонецЦикла;
 	Для Сч1=1 По РазмерМСумКолонки Цикл
 	    Мас1[1][Сч1+Число(РазмерМКолонки)]=МасИдКолонки[МСумКолонки[Сч1]];
		Мас1[2][Сч1+Число(РазмерМКолонки)]=МасТипКолонки[МСумКолонки[Сч1]];
		Мас1[3][Сч1+Число(РазмерМКолонки)]=МасДлинаКолонки[МСумКолонки[Сч1]];
		Мас1[4][Сч1+Число(РазмерМКолонки)]=МасТочностьКолонки[МСумКолонки[Сч1]];
		Мас1[5][Сч1+Число(РазмерМКолонки)]=МасЗаголовокКолонки[МСумКолонки[Сч1]];
		Мас1[6][Сч1+Число(РазмерМКолонки)]=МасШиринаКолонки[МСумКолонки[Сч1]];
		Мас1[7][Сч1+Число(РазмерМКолонки)]=МасПиктограммыКолонки[МСумКолонки[Сч1]];
		Мас1[8][Сч1+Число(РазмерМКолонки)]=МасФорматКолонки[МСумКолонки[Сч1]];
		Мас1[9][Сч1+Число(РазмерМКолонки)]=МасПоложениеКолонки[МСумКолонки[Сч1]];
	КонецЦикла;
	МасИдКолонки.Загрузить(Мас1[1]);
	МасТипКолонки.Загрузить(Мас1[2]);
	МасДлинаКолонки.Загрузить(Мас1[3]);
	МасТочностьКолонки.Загрузить(Мас1[4]);
	МасЗаголовокКолонки.Загрузить(Мас1[5]);
	МасШиринаКолонки.Загрузить(Мас1[6]);
	МасПиктограммыКолонки.Загрузить(Мас1[7]);
	МасФорматКолонки.Загрузить(Мас1[8]);
	МасПоложениеКолонки.Загрузить(Мас1[9]);
	
	МасДанные.Загрузить(МасДанные1);
 	
 	КС=Число(РазмерМассива(МасДанные));
  	КК=Число(РазмерМКолонки+РазмерМСумКолонки);
	СинхронизироватьСтрокиКолонки(); 	
КонецПроцедуры//Свернуть
//___________________________________________________________________________________________
//
Процедура Выгрузить(Значение,НачСтрока="",КонСтрока="",Колонки=0) Экспорт
	МасДанные1=СоздатьОбъект("Массив");
	МассивКолонок=СоздатьОбъект("Массив");
	Если ТипЗначенияСтр(НачСтрока)<>"Число"Тогда
		НачСтрока=1; 
	КонецЕсли;
	Если ТипЗначенияСтр(КонСтрока)<>"Число" Тогда
		КонСтрока=КС; 
	КонецЕсли;
    
    Если НачСтрока<1 Тогда	    
		НачСтрока=1;
	ИначеЕсли НачСтрока>КС Тогда
	    СтатусВозврата=0;	 
	КонецЕсли;
	Если КонСтрока<=НачСтрока Тогда
		КонСтрока=НачСтрока;
	ИначеЕсли КонСтрока>КС Тогда
	    КонСтрока=КС;	 
	КонецЕсли;
	МассивКолонок=РазобратьПереченьКолонок(Строка(Колонки));
	Если ТипЗначенияСтр(Значение)="СписокЗначений" Тогда
	    Значение.УдалитьВсе();
	    Для Сч1=НачСтрока По КонСтрока Цикл
	    	Для Сч2=1 По РазмерМассива(МассивКолонок) Цикл
	    		Значение.ДобавитьЗначение(МасДанные[Сч1][МассивКолонок[Сч2]]); 
	    	КонецЦикла;
	    КонецЦикла;
	    
	ИначеЕсли ТипЗначенияСтр(Значение)="ТаблицаЗначений" Тогда
	    Значение.Очистить();
	    Для Сч=1 По РазмерМассива(МассивКолонок) Цикл
	    	Значение.НоваяКолонка(МасИдКолонки[МассивКолонок[Сч]]); 
	    КонецЦикла;
	    Для Сч1=НачСтрока По КонСтрока Цикл
            Значение.НоваяСтрока();
			Для Сч2=1 По РазмерМассива(МассивКолонок) Цикл
				Значение.УстановитьЗначение(Значение.НомерСтроки,МассивКолонок[Сч2],МасДанные[Сч1][МассивКолонок[Сч2]]);
			КонецЦикла;
		КонецЦикла;
	Иначе
	    Значение=СоздатьОбъект("ТаблицаЗначений");
	    Для Сч=1 По РазмерМассива(МассивКолонок) Цикл
	    	Значение.НоваяКолонка(МасИдКолонки[МассивКолонок[Сч]]); 
	    КонецЦикла;
	    Для Сч1=НачСтрока По КонСтрока Цикл
			Значение.НоваяСтрока();
			Для Сч2=1 По РазмерМассива(МассивКолонок) Цикл			
				Значение.УстановитьЗначение(Значение.НомерСтроки,МассивКолонок[Сч2],МасДанные[Сч1][МассивКолонок[Сч2]]);
			КонецЦикла;
		КонецЦикла;
    КонецЕсли;
	
КонецПроцедуры//Выгрузить
//___________________________________________________________________________________________
//
Процедура Загрузить(ТЗ) Экспорт
    Очистить();
    Для Сч=1 По ТЗ.КоличествоКолонок() Цикл
    	НоваяКолонка(ТЗ.ПолучитьПараметрыКолонки(Сч));
    КонецЦикла;
    Для Сч1=1 По ТЗ.КоличествоСтрок() Цикл
        НоваяСтрока();
        Для Сч2=1 По КК Цикл
        	УстановитьЗначение(Сч1,Сч2,ТЗ.ПолучитьЗначение(Сч1,Сч2)); 
        КонецЦикла
    КонецЦикла
   
КонецПроцедуры//Загрузить
//___________________________________________________________________________________________
//
Процедура ВидимостьКолонки(Колонки,Видимость="",Позиция="") Экспорт
	Если ЕстьДиалоговыйЭлемент Тогда
		Если ТипЗначения(Видимость)<>1 Тогда
			Видимость=1;
		КонецЕсли

		МассивКолонок=РазобратьПереченьКолонок(Колонки);
		Для Сч=1 По РазмерМассива(МассивКолонок) Цикл
			Таблица.ВидимостьКолонки(МассивКолонок[Сч]-1,Видимость);
//			Если Видимость=1 Тогда
//			    Таблица.ШиринаКолонки(МассивКолонок[Сч]-1,МасШиринаКолонки[МассивКолонок[Сч]]*5);
//			Иначе
//	            Таблица.ШиринаКолонки(МассивКолонок[Сч]-1,0);
//			КонецЕсли
		КонецЦикла
	КонецЕсли
	
КонецПроцедуры//ВидимостьКолонки
//___________________________________________________________________________________________
//
Процедура Фиксировать(КолСтрок="",КолКолонок="") Экспорт
	Если ЕстьДиалоговыйЭлемент Тогда
		Если ТипЗначенияСтр(КолСтрок)="Число" Тогда	
		    КФС=КолСтрок+1;
			Таблица.УстановитьКоличествоФиксСтрок(КФС); 
		КонецЕсли;
		Если ТипЗначенияСтр(КолКолонок)="Число" Тогда
		    КФК=КолКолонок;
			Таблица.УстановитьКоличествоФиксКолонок(КФК); 
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры//Фиксировать
//___________________________________________________________________________________________
//
Процедура ВыводитьПиктограммы(Кол) Экспорт
	Если ТипЗначенияСтр(Кол)="Строка" Тогда
		НомКол=ПолучитьНомерАтрибута(Кол);
    ИначеЕсли ТипЗначенияСтр(Кол)="Число" Тогда
        НомКол=Кол;
    Иначе
        СтатусВозврата=0;
	КонецЕсли;
	Если ЕстьДиалоговыйЭлемент Тогда
		Если (НомКол>0) И (НомКол<=КК)  Тогда
			МасПиктограммыКолонки[НомКол]=1; 		 
		КонецЕсли;
	КонецЕсли;
	Таблица.Обновить();
	//Дальше смотри предопределенную процедуру ОбработатьЯчейку()
КонецПроцедуры//ВыводитьПиктограммы

//___________________________________________________________________________________________
//
Процедура РазрешитьРедактирование(Уст)Экспорт
	Таблица.Редактирование(Уст);
КонецПроцедуры


//управление диалоговым элементом
//___________________________________________________________________________________________
Функция Видимость(Парам)Экспорт
	 Возврат Таблица.Видимость(Парам);
КонецФункции
//___________________________________________________________________________________________
Функция Доступность(Парам)Экспорт
	 Возврат Таблица.Редактирование(Парам);
КонецФункции
//___________________________________________________________________________________________
Функция Заголовок(Парам)Экспорт
КонецФункции
//___________________________________________________________________________________________
Функция Редактирование(Парам)Экспорт
	 Возврат Таблица.Редактирование(Парам);
КонецФункции
//___________________________________________________________________________________________
Функция Маска(Парам)Экспорт
КонецФункции
//___________________________________________________________________________________________
Функция Модифицированность(Парам)Экспорт
	 Возврат Таблица.Модифицированность(Парам);
КонецФункции
//___________________________________________________________________________________________
Функция Активизировать(Парам)Экспорт
	 Возврат Таблица.Активизировать(Парам);
КонецФункции
