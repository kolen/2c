//Константы
#Задать ЭтоРазделитель		1
#Задать ЭтоИдентификатор	2
#Задать ЭтоКонстанта		3

//Переменные
Перем ТекстЗапроса;
Перем КонтекстРазбораВыражений;
Перем ТипыФункцийЗапроса;
Перем СтруктураЗапроса;


//	Период С НачПериода По КонПериода;
//	Статья=Операция.ДоходыРасходы.Статья;
//	Сумма=Операция.ДоходыРасходы.Сумма;
//	Функция Приход=Приход(Сумма);
//	Функция Расход=Расход(Сумма);
//	Группировка Статья;
//	Условие (Статья В ВыбСтатья);

//___________________________________________________________________________________________
Функция Парсинг(Текст,КонтекстВыражений) Экспорт
	ТекстЗапроса=Текст;
	КонтекстРазбораВыражений=КонтекстВыражений;

	//переводим текст запроса в лексемы (массив структуры с полями Тип и Значение)
	//Тип: 
	//		1 - символ разделитель (+,-,;  и т.п.)	
	//		2 - идентификатор
	//		3 - значение константы
	Лексемы=ПолучитьМассивЛексем(Текст);


	//переводим лексемы в структутуру запроса	
	СтруктураЗапроса=СоздатьОбъект("Структура");
	СтруктураЗапроса.НачДата='01.01.1975';//начальные значения
	СтруктураЗапроса.КонДата='01.01.2035';
	СтруктураЗапроса.Переменные=СоздатьОбъект("Структура");//Структура структур с полями: 	Тип, Реквизит
	СтруктураЗапроса.Функции=СоздатьОбъект("Структура");//Структура структур с полями: 		Тип, Переменная
	СтруктураЗапроса.Группировки=СоздатьОбъект("Структура");//Структура структур с полями: 	Переменная
	СтруктураЗапроса.Условия=СоздатьОбъект("Массив");//массив структур с полями: 			Переменная, Оператор, Значение

	//Разрешенные функции	
	ТипыФункцийЗапроса=СоздатьОбъект("Структура");
	ТипыФункцийЗапроса.Приход=1;
	ТипыФункцийЗапроса.Расход=1;
	ТипыФункцийЗапроса.НачОст=1;
	ТипыФункцийЗапроса.КонОст=1;
	ТипыФункцийЗапроса.Сумма=1;
	ТипыФункцийЗапроса.Счетчик=1;
	ТипыФункцийЗапроса.Максимум =1;
	ТипыФункцийЗапроса.Минимум =1;

	А=1;
	Пока А<РазмерМассива(Лексемы) Цикл
		Если Лексемы[А].Значение = ";" Тогда
			ПолучитьРазделитель(Лексемы,А);
			Продолжить;
		КонецЕсли
	
		Если РазобратьПериод(Лексемы,А)=1 Тогда
			 Продолжить;
		КонецЕсли
		Если РазобратьФункции(Лексемы,А)=1 Тогда
			 Продолжить;
		КонецЕсли
		Если РазобратьГруппировки(Лексемы,А)=1 Тогда
			 Продолжить;
		КонецЕсли
		Если РазобратьУсловия(Лексемы,А)=1 Тогда
			 Продолжить;
		КонецЕсли
		Если РазобратьПеременные(Лексемы,А)=1 Тогда
			 Продолжить;
		КонецЕсли
		//...
		
		
		ОшибкаПарсингаЗапроса(Лексемы,А,"Нераспознанное выражение");
	КонецЦикла
	Возврат СтруктураЗапроса;
КонецФункции

//___________________________________________________________________________________________
Функция РазобратьПериод(Лексемы,ТекНом)
//	Период С НачПериода По КонПериода;
	Если Лексемы[ТекНом].Тип = ЭтоИдентификатор Тогда
		Если ВРЕГ(Лексемы[ТекНом].Значение)="ПЕРИОД" Тогда//Это задание периода запроса
			ТекНом=ТекНом+1;
			
			Если Лексемы[ТекНом].Тип = ЭтоИдентификатор Тогда
				Если ВРЕГ(Лексемы[ТекНом].Значение)="С" Тогда
					ТекНом=ТекНом+1;
					СтруктураЗапроса.НачДата=ПолучитьЗначение(Лексемы,ТекНом);
				КонецЕсли
				Если ВРЕГ(Лексемы[ТекНом].Значение)="ПО" Тогда
					ТекНом=ТекНом+1;
					СтруктураЗапроса.КонДата=ПолучитьЗначение(Лексемы,ТекНом);
				КонецЕсли
			КонецЕсли
			ПолучитьРазделитель(Лексемы,ТекНом);
			Возврат 1;//выражение распознанно и обработано
		КонецЕсли
	КонецЕсли
	Возврат 0;
КонецФункции

//___________________________________________________________________________________________
Функция РазобратьФункции(Лексемы,ТекНом)
//	Функция Приход=Приход(Сумма);
	Если Лексемы[ТекНом].Тип = ЭтоИдентификатор Тогда
		Если ВРЕГ(Лексемы[ТекНом].Значение)="ФУНКЦИЯ" Тогда//Это задание функций запроса
			ТекНом=ТекНом+1;
			Если Лексемы[ТекНом].Тип <> ЭтоИдентификатор Тогда
				ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Ожидается имя функции");
			КонецЕсли
			Имя=Лексемы[ТекНом].Значение;
			ТекНом=ТекНом+1;
			Функции=СтруктураЗапроса["Функции"];
			Если Функции.НайтиИдентификатор(Имя) Тогда
				ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Повторное задание имени функции """+Имя+"""");
			КонецЕсли
			Функции[Имя]=СоздатьОбъект("Структура");
			
			
			ПолучитьРазделитель(Лексемы,ТекНом,"=");

			Если Лексемы[ТекНом].Тип <> ЭтоИдентификатор Тогда
				ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Ожидается задание имя внутренней функции");
			КонецЕсли
			Функции[Имя].Тип=Лексемы[ТекНом].Значение;
			ТекНом=ТекНом+1;
			Если ТипыФункцийЗапроса.НайтиИдентификатор(Функции[Имя].Тип)=0 Тогда
				ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Неправильно задано имя внутренней функции");
			КонецЕсли
			
			ПолучитьРазделитель(Лексемы,ТекНом,"(");
			
			Если Врег(Функции[Имя].Тип)<>"СЧЕТЧИК" Тогда
				Если Лексемы[ТекНом].Тип <> ЭтоИдентификатор Тогда
					ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Ожидается задание имени переменной");
				КонецЕсли
				Функции[Имя].Переменная=Лексемы[ТекНом].Значение;
				ТекНом=ТекНом+1;
				Если СтруктураЗапроса.Переменные.НайтиИдентификатор(Функции[Имя].Переменная)=0 Тогда
					ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Функция задана по несуществующей внутренней переменной");
				КонецЕсли
			КонецЕсли
			
			ПолучитьРазделитель(Лексемы,ТекНом,")");
			ПолучитьРазделитель(Лексемы,ТекНом);
			Возврат 1;//выражение распознанно и обработано
		КонецЕсли
	КонецЕсли
	Возврат 0;
КонецФункции

//___________________________________________________________________________________________
Функция РазобратьГруппировки(Лексемы,ТекНом)
//	Группировка Статья;
	Если Лексемы[ТекНом].Тип = ЭтоИдентификатор Тогда
		Если ВРЕГ(Лексемы[ТекНом].Значение)="ГРУППИРОВКА" Тогда//Это задание группировки запроса
			ТекНом=ТекНом+1;
			Если Лексемы[ТекНом].Тип <> ЭтоИдентификатор Тогда
				ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Ожидается имя группировки");
			КонецЕсли
			Имя=Лексемы[ТекНом].Значение;
			ТекНом=ТекНом+1;
			Если СтруктураЗапроса.Группировки.НайтиИдентификатор(Имя) Тогда
				ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Дублирование имени группировки");
			КонецЕсли
			Если СтруктураЗапроса.Переменные.НайтиИдентификатор(Имя)=0 Тогда
				ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Группировка задана по несуществующей внутренней переменной");
			КонецЕсли
			СтруктураЗапроса.Группировки[Имя]=СоздатьОбъект("Структура");
			СтруктураЗапроса.Группировки[Имя].Переменная=Имя;
			
			ПолучитьРазделитель(Лексемы,ТекНом);
			Возврат 1;//выражение распознанно и обработано
		КонецЕсли
	КонецЕсли
	Возврат 0;
КонецФункции

//___________________________________________________________________________________________
Функция РазобратьУсловия(Лексемы,ТекНом)
//	Условие (Статья В ВыбСтатья);
	Если Лексемы[ТекНом].Тип = ЭтоИдентификатор Тогда
		Если ВРЕГ(Лексемы[ТекНом].Значение)="УСЛОВИЕ" Тогда//Это задание условия запроса
			ТекНом=ТекНом+1;
			
			РазобратьПростоеУсловие(Лексемы,ТекНом);
			
			ПолучитьРазделитель(Лексемы,ТекНом);
			Возврат 1;//выражение распознанно и обработано
		КонецЕсли
	КонецЕсли
	Возврат 0;
КонецФункции

//___________________________________________________________________________________________
Процедура РазобратьПростоеУсловие(Лексемы,ТекНом)
//(Статья В ВыбСтатья);
	ПолучитьРазделитель(Лексемы,ТекНом,"(");
	Условие=СоздатьОбъект("Структура");
	
	Если Лексемы[ТекНом].Тип <> ЭтоИдентификатор Тогда
		ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Ожидается имя внутренней переменной");
	КонецЕсли
	
	Условие.Переменная=Лексемы[ТекНом].Значение;
	ТекНом=ТекНом+1;

	Если СтруктураЗапроса.Переменные.НайтиИдентификатор(Условие.Переменная)=0 Тогда
		ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Условие задано по несуществующей внутренней переменной");
	КонецЕсли

	Условие.Оператор=Лексемы[ТекНом].Значение;
	ТекНом=ТекНом+1;

	Если Лексемы[ТекНом].Тип = ЭтоРазделитель Тогда
		Условие.Оператор=Условие.Оператор+Лексемы[ТекНом].Значение;
		ТекНом=ТекНом+1;
	КонецЕсли


	Условие.Значение=ПолучитьЗначение(Лексемы,ТекНом);
	
	СтруктураЗапроса.Условия[РазмерМассива(СтруктураЗапроса.Условия)+1]=Условие;
	ПолучитьРазделитель(Лексемы,ТекНом,")");
КонецПроцедуры


//___________________________________________________________________________________________
Функция РазобратьПеременные(Лексемы,ТекНом)
	Перем Объект;
	
//	Сумма=Операция.ДоходыРасходы.Сумма;
	Если Лексемы[ТекНом].Тип = ЭтоИдентификатор Тогда
		Имя=Лексемы[ТекНом].Значение;
		ТекНом=ТекНом+1;
		Если СтруктураЗапроса.Переменные.НайтиИдентификатор(Имя) Тогда
			ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Дублирование имени переменной");
		КонецЕсли
		СтруктураЗапроса.Переменные[Имя]=СоздатьОбъект("Структура");
		
		ПолучитьРазделитель(Лексемы,ТекНом,"=");
		
		Если Лексемы[ТекНом].Тип <> ЭтоИдентификатор Тогда
			ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Ожидается задание типа объекта");
		КонецЕсли
		Тип=Лексемы[ТекНом].Значение;
		ТекНом=ТекНом+1;

		ПолучитьРазделитель(Лексемы,ТекНом,".");
		
		Если Лексемы[ТекНом].Тип <> ЭтоИдентификатор Тогда
			ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Ожидается задание вида объекта");
		КонецЕсли
		Вид=Лексемы[ТекНом].Значение;
		ТекНом=ТекНом+1;

		//проверям корректность типа и вида объекта
		ТипВид=Тип+"."+Вид;
		Попытка
		Объект=СоздатьОбъект(ТипВид);
		Исключение
			ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Ошибочное задание объекта """+ТипВид+""": "+ОписаниеОшибки());
		КонецПопытки
		
		ПолучитьРазделитель(Лексемы,ТекНом,".");
		
		Если Лексемы[ТекНом].Тип <> ЭтоИдентификатор Тогда
			ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Ожидается задание имени реквизита");
		КонецЕсли
		Реквизит=Лексемы[ТекНом].Значение;
		ТекНом=ТекНом+1;
		
		Если Объект.НайтиАтрибут(Реквизит)=0 Тогда
//			Если Лексемы[ТекНом].Значение="." Тогда
//				ТекНом=ТекНом-1;
//				Перейти ЗаданиеВида;//длинное имя объекта, например табличная часть документа
//			КонецЕсли
			
			
			ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Ошибочное задание атрибута """+Реквизит+""" - атрибут у объекта не найден");
		КонецЕсли
		
		
	
		СтруктураЗапроса.Переменные[Имя].Тип=Тип;
		СтруктураЗапроса.Переменные[Имя].Вид=Вид;
		СтруктураЗапроса.Переменные[Имя].Реквизит=Реквизит;
		
		ПолучитьРазделитель(Лексемы,ТекНом);
		Возврат 1;//выражение распознанно и обработано
	КонецЕсли

	ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Нераспознанное выражение");
КонецФункции


//___________________________________________________________________________________________
//получение значения ожидаемого выражения из массива лексем
Функция ПолучитьЗначение(Лексемы,ТекНом)
	Перем Значение;
	Если Лексемы[ТекНом].Тип = ЭтоИдентификатор Тогда
		Значение=Выражение(Лексемы[ТекНом].Значение,КонтекстРазбораВыражений);
		Если ПустоеЗначение(ОписаниеОшибки())=0 Тогда
			//ВызватьИсключение;
			//Ошибка(ОписаниеОшибки());
			ОшибкаПарсингаЗапроса(Лексемы,ТекНом+1,ОписаниеОшибки());
		КонецЕсли
	ИначеЕсли Лексемы[ТекНом].Тип = ЭтоКонстанта Тогда
		Значение=Лексемы[ТекНом].Значение;
	КонецЕсли
	ТекНом=ТекНом+1;
	Возврат Значение;
КонецФункции

//___________________________________________________________________________________________
//Получение обязательного разделителя ";" из текста запроса
Процедура ПолучитьРазделитель(Лексемы,ТекНом,Символ=";")
	Если Лексемы[ТекНом].Значение <> Символ Тогда
		ОшибкаПарсингаЗапроса(Лексемы,ТекНом,"Ожидается символ """+Символ+"""")
	КонецЕсли
	ТекНом=ТекНом+1;
КонецПроцедуры

//___________________________________________________________________________________________
Процедура ОшибкаПарсингаЗапроса(Лексемы,ТекНом,Стр)
	СтрокаЗапроса=Лев(ТекстЗапроса,Лексемы[ТекНом].НомерПозиции);
	Ошибка(Сокрлп(СтрокаЗапроса)+"<?>"+Симв(13)+Стр);
КонецПроцедуры

