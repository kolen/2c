Перем ГМ;
Перем ТекЭлемент;
Перем Родитель;
Перем ТекПозиция;
Перем Интерфейс;
///////////////////////////////////////////////////////////////////////
//Предопределенная процедура - вызывается при первом открытии формы
Процедура ПриОткрытии()
	//глВосстановитьЗначенияФормы(Контекст);
	Конт=Форма.Параметр;
	Если ТипЗначенияСтр(Конт)="СписокЗначений" Тогда
	    ТекЭлемент=Конт.ПолучитьЗначение(1);
	    Родитель=Конт.ПолучитьЗначение(2);
	    ТекПозиция=Конт.ПолучитьЗначение(3);
	    Заголовок=Конт.ПолучитьЗначение(4);
	    Интерфейс=Конт.ПолучитьЗначение(5);
	    ГМ=СоздатьОбъект("ГлавноеМеню");
	    ПостроитьСписокКоманд();
	    Если ТекЭлемент=0 Тогда
	    Иначе	 
	        ГМ.УстановитьИмяИдентификатора("ИД");
	        ГМ.УстановитьИдентификаторОбъекта(ТекЭлемент);
	        ГМ.НайтиЭлементВБД();
	        ТекСтрока=Команда.НайтиЗначение(ГМ.Команда);
	        Если ТекСтрока>0 Тогда
	            Команда.ТекущаяСтрока(ТекСтрока);	 
	        КонецЕсли
	        ПараметрФормы=ГМ.Параметр;
	        МодальностьФормы=ГМ.Модальность;
	    КонецЕсли
	    Если Родитель=0 Тогда
	        Форма.Команда.Доступность(0);
	        Форма.ПараметрФормы.Доступность(0);
	        Форма.МодальностьФормы.Доступность(0); 
	    КонецЕсли
	    
	Иначе
	    ЗакрытьФорму();	 
	КонецЕсли
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////
//Предопределенная процедура - вызывается при закрытии формы
Процедура ПриЗакрытии()
//	Если СостояниеКлавиши(27) Тогда
//		СтатусВозврата(0);
//	КонецЕсли;
//	глЗапомнитьЗначенияФормы(Контекст);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////
//Процедура обработки нажатия кнопки Отмена - выполняет закрытие формы
Процедура ЗакрытьФорму()
	Форма.Закрыть();
КонецПроцедуры

///////////////////////////////////////////////////////////////////////
//Процедура обработки нажатия кнопки ОК
Процедура ПриНажатииОК()
	Если (Заголовок="<новый...>") ИЛИ
		(Заголовок="<новая колонка...>") Тогда
		Предупреждение("Измените название элемента меню!"); 
		Возврат; 
	КонецЕсли
	ГМ.НачатьТранзакцию();
	Если ТекЭлемент=0 Тогда
		ГМ.Новый();
		ГМ.ИД=Число(ПолучитьЗначениеЗапроса("SELECT max("+ГМ.ПолучитьИмяПоляБД("ИД")+") FROM "+ГМ.ИмяТаблицыОбъекта()))+1; 
	Иначе
		ГМ.УстановитьИмяИдентификатора("ИД");
		ГМ.УстановитьИдентификаторОбъекта(ТекЭлемент);
		ГМ.НайтиЭлементВБД();
	КонецЕсли
	ГМ.Родитель=Родитель;
	ГМ.Заголовок=Заголовок;
	Если Родитель>0 Тогда
		Представление="";
		Значение=Команда.ПолучитьЗначение(Команда.ТекущаяСтрока(),Представление);
		Если Сред(Значение,1,13)="ОткрытьСписок" Тогда
			ГМ.Объект=Сред(Представление,1,СтрДлина(Представление)-8);
		    ГМ.Команда=Значение+"."+ГМ.Объект;
		Иначе
		    ГМ.Команда=Значение;
		КонецЕсли
		
		ГМ.Параметр=ПараметрФормы;	 
	КонецЕсли
	ГМ.Позиция=ТекПозиция;  
	ГМ.Интерфейс=Интерфейс; 
	ГМ.Модальность=МодальностьФормы; 
	ГМ.Записать();
	ГМ.ЗафиксироватьТранзакцию();
	ЗакрытьФорму();
КонецПроцедуры//ПриНажатииОК

//---------------------------------------------------------------------
Функция ПолучитьЗначениеЗапроса(Текст)
	ГМ.Запрос(Текст);
	Если ГМ.ПолучитьСтроку()=1 Тогда
		Возврат ГМ.ПолучитьПоле(1);
	КонецЕсли
	Возврат "";
КонецФункции//ПолучитьЗначениеЗапроса

//---------------------------------------------------------------------
Процедура ПостроитьСписокКоманд()
    Мета=СоздатьОбъект("Метаданные").Массив["Общие формы"];
    Для Сч=1 По РазмерСтруктуры(Мета) Цикл
        ИмяФормы=Мета.ИдентификаторПоНомеру(Сч);
        Значение="Общие формы\"+ИмяФормы;
        Представление="ОбщиеФормы."+ИмяФормы+".Открыть";
        Команда.ДобавитьЗначение(Значение,Представление);
    КонецЦикла;
    Мета=СоздатьОбъект("Метаданные").Массив.Объекты;
    Для Сч=1 По РазмерСтруктуры(Мета) Цикл
        ТипОбъекта=Мета.ИдентификаторПоНомеру(Сч);
        Для Сч1=1 По РазмерСтруктуры(Мета[ТипОбъекта]["Формы"]) Цикл
            ИмяФормы=Мета[ТипОбъекта]["Формы"].ИдентификаторПоНомеру(Сч1);
            Значение="Объекты\"+ТипОбъекта+"\Формы\"+ИмяФормы;
            Представление="ФормыОбъектов."+ТипОбъекта+"."+ИмяФормы+".Открыть";
            Команда.ДобавитьЗначение(Значение,Представление);
        КонецЦикла;
    КонецЦикла;    
    Мета=СоздатьОбъект("Метаданные").Массив.Метаданные;
    Для Сч=1 По РазмерСтруктуры(Мета) Цикл
        ТипОбъекта=Мета.ИдентификаторПоНомеру(Сч);
        Для Сч1=1 По РазмерСтруктуры(Мета[ТипОбъекта]) Цикл
            ВидОбъекта=Мета[ТипОбъекта].ИдентификаторПоНомеру(Сч1);
            Если (ТипОбъекта="Справочник") ИЛИ
                 (ТипОбъекта="Документ") ИЛИ
                 (ТипОбъекта="Операции") Тогда
               	Значение="ОткрытьСписок."+ТипОбъекта+"."+ВидОбъекта;
                Представление=ТипОбъекта+"."+ВидОбъекта+".Открыть";
            	Команда.ДобавитьЗначение(Значение,Представление);
            ИначеЕсли (ТипОбъекта="Обработка") ИЛИ
                      (ТипОбъекта="Отчет") Тогда
               	Значение=ТипОбъекта+"."+ВидОбъекта;       	 
               	Представление=ТипОбъекта+"."+ВидОбъекта+".Открыть";
            	Команда.ДобавитьЗначение(Значение,Представление);
            КонецЕсли
        КонецЦикла;    
    КонецЦикла;
    
КонецПроцедуры//ПостроитьСписокКоманд()

