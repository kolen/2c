//******************************************************************************************
//Атрибуты объекта доступные через точку (переменные с признаком Экспорт)
//******************************************************************************************
//...
Перем ИД Экспорт;
Перем ДатаВремя Экспорт;
Перем РежимРаботы2С Экспорт;
Перем Пользователь Экспорт;
Перем Компьютер Экспорт;
Перем ТипСобытия Экспорт;//1-подключение/отключение, 2-изменение БД, 3-информация, 4-ошибка
Перем Событие Экспорт;
Перем Объект Экспорт;
Перем ПредставлениеОбъекта Экспорт;

Перем БДЛог;
Перем ОбъектВыбран;
Перем масАтрибуты;
Перем масУсловияВыборки;
//******************************************************************************************
//Предопределенные процедуры и функции объекта
//******************************************************************************************
//Конструктор (вызывается при инициализации объекта)
//ВидОбъекта - вид объекта, задающийся строкой следуемой за символом "."
//Параметр - произвольный параметр (для визуальных элементов в него передается диалоговый элемент формы)
Процедура Конструктор(ВидОбъекта,Параметр)Экспорт
    БДЛог=СоздатьОбъект("БазаДанных");
    //БДЛог.Соединение(КаталогИБ()+"log.db");
    Если БДЛог.СуществуетТаблица("log")=0 Тогда
	    БДЛог.Запрос("create table log (id int,datetime decimal(16,0),reg int,user char(30),comp char(30),eventtype int, event char(30),obj decimal(20,0),objview text)");
	КонецЕсли;    
    масАтрибуты=СоздатьОбъект("Структура");
    масАтрибуты["ИД"]="id";
    масАтрибуты["ДатаВремя"]="datetime";
    масАтрибуты["РежимРаботы2С"]="reg";
    масАтрибуты["Пользователь"]="user";
    масАтрибуты["Компьютер"]="comp";
    масАтрибуты["ТипСобытия"]="eventtype";
    масАтрибуты["Событие"]="event";
    масАтрибуты["Объект"]="obj";
    масАтрибуты["ПредставлениеОбъекта"]="objview";
КонецПроцедуры
//...
//___________________________________________________________________________________________
Функция ПолучитьИД()
	Возврат Число(ПолучитьЗначениеЗапроса("select max(id) from log"))+1;
КонецФункции//ПолучитьИД
//___________________________________________________________________________________________
//Выполняет запрос и возвращает значение из первой колонки первой строки
Функция ПолучитьЗначениеЗапроса(Текст)
	БДЛог.Запрос(Текст);
	Если БДЛог.ПолучитьСтроку()=1 Тогда
		Возврат	БДЛог.ПолучитьПоле(1);
	КонецЕсли
	Возврат "";
КонецФункции
//___________________________________________________________________________________________
Функция СформироватьПозициюОсиВремени(дДата,сВремя)
	сВремя=СтрЗаменить(сВремя,":","");
	Возврат Число(ДатаВСтроку(дДата,сВремя));	
КонецФункции//СформироватьПозициюОсиВремени
//___________________________________________________________________________________________
Функция СтрИзЗначения(Рекв,Значение)
	Если (Рекв="Событие") ИЛИ
		 (Рекв="Пользователь") ИЛИ
		 (Рекв="Компьютер") ИЛИ
		 (Рекв="ПредставлениеОбъекта") Тогда
	    Значение="'"+Значение+"'";
	КонецЕсли
    Возврат Значение;
КонецФункции//СтрИзЗначения
//___________________________________________________________________________________________
Функция ПолучитьРежимРаботы()
	Реж=0;
	Если РежимРаботы()="Предприятие" Тогда
		Реж=1;
	КонецЕсли
	Если МонопольныйРежим() Тогда
		Реж=Реж+2;
	КонецЕсли
#Если server
    Реж=Реж+4;
#КонецЕсли
    Возврат Реж;         
КонецФункции//ПолучитьРежимРаботы

//******************************************************************************************
//Методы объекта (процедуры и функции с признаком Экспорт)
//******************************************************************************************
//...

//___________________________________________________________________________________________
Функция ЗаписатьСобытие(чТип,сСобытие,нОбъект="") Экспорт
	ИД=ПолучитьИД();
	ДатаВремя=СформироватьПозициюОсиВремени(ТекущаяДата(),ТекущееВремя());
	РежимРаботы2С=ПолучитьРежимРаботы();
	Пользователь=ИмяПользователя();
	Компьютер=ИмяКомпьютера();
	Если ТипЗначения(нОбъект)>3 Тогда
//		Объект=нОбъект.ТекущийЭлемент();
		ПредставлениеОбъекта=нОбъект.ПолучитьПредставлениеОбъекта();
	Иначе
		Объект=0;
		ПредставлениеОбъекта=Строка(нОбъект);	
	КонецЕсли
    БДЛог.Запрос("insert into log (id,datetime,reg,user,comp,eventtype,event,obj,objview) values ("+ИД+","+ДатаВремя+","+РежимРаботы2С+",'"+Пользователь+"','"+Компьютер+"',"+чТип+",'"+сСобытие+"',"+Объект+",'"+ПредставлениеОбъекта+"')");
КонецФункции//ЗаписатьСобытие
//___________________________________________________________________________________________
Функция ВыбратьСобытия() Экспорт
    Возврат БДЛог.Запрос("select * from log"+ПолучитьУсловияЗапроса());	
КонецФункции//ВыбратьСобытия()
//___________________________________________________________________________________________
Функция ПолучитьСобытие() Экспорт
	ОбъектВыбран=БДЛог.ПолучитьСтроку();
	Если ОбъектВыбран Тогда
		ИД=БДЛог.ПолучитьПоле("id");
		ДатаВремя=БДЛог.ПолучитьПоле("datetime");
		РежимРаботы2С=БДЛог.ПолучитьПоле("reg");
		Пользователь=БДЛог.ПолучитьПоле("user");
		Компьютер=БДЛог.ПолучитьПоле("comp");
		ТипСобытия=БДЛог.ПолучитьПоле("eventtype");
		Событие=БДЛог.ПолучитьПоле("event");
		Объект=БДЛог.ПолучитьПоле("obj");
		ПредставлениеОбъекта=БДЛог.ПолучитьПоле("objview");
	КонецЕсли
    Возврат ОбъектВыбран;
КонецФункции//ПолучитьСобытие
//___________________________________________________________________________________________
Функция Очистить()
    БДЛог.Запрос("delete from log where 1=1");		
    Возврат 1;
КонецФункции//Очистить

//___________________________________________________________________________________________
Процедура ОчиститьУсловия()Экспорт
	масУсловияВыборки=СоздатьОбъект("Структура");
КонецПроцедуры//ОчиститьУсловия

//___________________________________________________________________________________________
Процедура СброситьУсловие(Реквизит)Экспорт
	масУсловияВыборки[Реквизит]="";
КонецПроцедуры//СброситьУсловие

//___________________________________________________________________________________________
Процедура ЗадатьУсловие(Реквизит,Значение,ОператорСравнения="=")Экспорт
	Перем ТекУсловие;
	Если ПустоеЗначение(ОператорСравнения)=1 Тогда
		ОператорСравнения="=";
	КонецЕсли

	ТекУсловие=СоздатьОбъект("Массив");//задаем новую группу условий для заданного реквизита
	ТекУсловие[1]["Реквизит"]=Реквизит;
	ТекУсловие[1]["ОператорСравнения"]=ОператорСравнения;
	ТекУсловие[1]["Значение"]=Значение;
	масУсловияВыборки[Реквизит]=ТекУсловие;
КонецПроцедуры//ЗадатьУсловие
//___________________________________________________________________________________________
Процедура ДобавитьУсловие(Реквизит,Значение,ОператорСравнения="=")Экспорт
	Перем ТекУсловие;
	Перем НомерУсловия;
	Если ПустоеЗначение(ОператорСравнения)=1 Тогда
		ОператорСравнения="=";
	КонецЕсли
		
	ТекУсловие=масУсловияВыборки[Реквизит];
	НомерУсловия=РазмерМассива(ТекУсловие)+1;//добавляем новое условие для заданного реквизита
	
	ТекУсловие[НомерУсловия]["Реквизит"]=Реквизит;
	ТекУсловие[НомерУсловия]["ОператорСравнения"]=ОператорСравнения;
	ТекУсловие[НомерУсловия]["Значение"]=Значение;
	масУсловияВыборки[Реквизит]=ТекУсловие;
КонецПроцедуры//ДобавитьУсловие
//___________________________________________________________________________________________
Функция ПолучитьУсловияЗапроса()//служебная функция
	Перем СтрУсловиеВыборки;
	КоличествоУсловийЗапроса=КоличествоУсловийЗапроса();
	Если КоличествоУсловийЗапроса Тогда
		СтрУсловиеВыборки=" WHERE ";
		Для А=1 По КоличествоУсловийЗапроса Цикл
			МасУсловий=масУсловияВыборки.ЗначениеПоНомеру(А);
			Для НомУсловия=1 По РазмерМассива(МасУсловий) Цикл
				ТекУсловие=МасУсловий[НомУсловия];
				СтрУсловиеВыборки=СтрУсловиеВыборки+масАтрибуты[ТекУсловие.Реквизит]+ТекУсловие.ОператорСравнения+СтрИзЗначения(ТекУсловие.Реквизит,ТекУсловие.Значение);
				СтрУсловиеВыборки=СтрУсловиеВыборки+" AND ";
			КонецЦикла
		КонецЦикла
		СтрУсловиеВыборки=Лев(СтрУсловиеВыборки,СтрДлина(СтрУсловиеВыборки)-5);
		Возврат СтрУсловиеВыборки;
	КонецЕсли
	Возврат "";
КонецФункции//ПолучитьУсловияЗапроса

//___________________________________________________________________________________________
Функция КоличествоУсловийЗапроса()//служебная функция
	Возврат РазмерСтруктуры(масУсловияВыборки);
КонецФункции//КоличествоУсловийЗапроса

